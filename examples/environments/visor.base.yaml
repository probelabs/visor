# Base Visor Configuration
# This file contains all check definitions that environments can filter using tags

version: "1.0"

# Default AI settings (can be overridden)
ai_provider: google
ai_model: gemini-1.5-flash

# All available checks with comprehensive tagging
checks:
  # ====================
  # Security Checks
  # ====================
  security-basic:
    type: ai
    group: security
    prompt: "Basic security scan for common vulnerabilities"
    tags: ["security", "basic", "fast", "dev", "staging", "prod"]
    on: [pr_opened, pr_updated]

  security-advanced:
    type: ai
    group: security
    prompt: "Advanced security audit with threat modeling"
    tags: ["security", "advanced", "slow", "staging", "prod"]
    on: [pr_opened]

  security-experimental:
    type: ai
    group: security
    prompt: "Experimental AI-powered vulnerability prediction"
    tags: ["security", "experimental", "dev"]
    on: [manual]

  # ====================
  # Performance Checks
  # ====================
  perf-basic:
    type: ai
    group: performance
    prompt: "Basic performance analysis"
    tags: ["performance", "basic", "fast", "dev", "staging", "prod"]
    on: [pr_opened, pr_updated]

  perf-load-testing:
    type: command
    group: performance
    exec: "npm run test:load"
    tags: ["performance", "load-testing", "slow", "staging"]
    on: [pr_opened]

  # ====================
  # Quality Checks
  # ====================
  lint:
    type: command
    group: quality
    exec: "npm run lint"
    tags: ["quality", "lint", "fast", "dev", "staging", "prod"]
    on: [pr_opened, pr_updated]

  test-unit:
    type: command
    group: quality
    exec: "npm test"
    tags: ["quality", "testing", "fast", "dev", "staging", "prod"]
    on: [pr_opened, pr_updated]

  test-integration:
    type: command
    group: quality
    exec: "npm run test:integration"
    tags: ["quality", "testing", "slow", "staging", "prod"]
    on: [pr_opened]

  # ====================
  # Documentation
  # ====================
  docs-check:
    type: ai
    group: docs
    prompt: "Check documentation completeness and accuracy"
    tags: ["documentation", "optional", "dev", "staging"]
    on: [pr_opened, pr_updated]

# Output settings
output:
  pr_comment:
    format: markdown
    group_by: group
    collapse: true