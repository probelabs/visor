# Example Visor configuration demonstrating MCP support in AI checks
version: "1.0"

# Global AI provider configuration
ai_provider: anthropic
ai_model: claude-3-sonnet

# Global MCP servers (available to all AI checks by default)
ai_mcp_servers:
  probe:
    command: "npx"
    args: ["-y", "@probelabs/probe@latest", "mcp"]
  filesystem:
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-filesystem", "/home/user/project"]

steps:
  # Example 1: Uses global MCP servers (inherits probe and filesystem)
  basic_security_review:
    type: ai
    prompt: |
      Review the code changes for security vulnerabilities using available tools.
      Focus on common security issues like injection attacks and XSS.
    on: ["pr_opened", "pr_updated"]
    tags: ["security", "basic"]

  # Example 2: Check-level MCP servers (overrides global)
  performance_review:
    type: ai
    prompt: |
      Analyze the code for performance issues using specialized tools.
      Look for inefficient algorithms and potential bottlenecks.
    ai_mcp_servers:
      probe:
        command: "npx"
        args: ["-y", "@probelabs/probe@latest", "mcp"]
      custom_profiler:
        command: "python3"
        args: ["./tools/performance-analyzer.py"]
        env:
          ANALYSIS_DEPTH: "comprehensive"
    on: ["pr_opened"]
    tags: ["performance", "mcp"]

  # Example 3: AI object-level MCP servers (overrides all others)
  comprehensive_review:
    type: ai
    prompt: |
      Perform comprehensive code analysis using all available tools.
      This check uses its own specific set of MCP servers.
    ai:
      provider: anthropic
      model: claude-3-opus  # Override global model for this check
      mcpServers:
        probe:
          command: "npx"
          args: ["-y", "@probelabs/probe@latest", "mcp"]
          env:
            PROBE_DEBUG: "true"
        filesystem:
          command: "npx"
          args: ["-y", "@modelcontextprotocol/server-filesystem", "/home/user/project"]
        github:
          command: "npx"
          args: ["-y", "@modelcontextprotocol/server-github"]
          env:
            GITHUB_TOKEN: "${GITHUB_TOKEN}"
    on: ["pr_opened"]
    tags: ["comprehensive", "mcp"]

  # Example 4: No MCP servers (basic AI check)
  simple_ai_check:
    type: ai
    prompt: "Review this code for basic issues without using external tools"
    ai_mcp_servers: {}  # Explicitly disable global MCP servers for this check
    on: ["pr_opened", "pr_updated"]
    tags: ["basic", "simple"]

output:
  pr_comment:
    enabled: true
    group_by: check