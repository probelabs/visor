version: "2.0"

checks:
  security:
    type: ai
    group: code-review  # Groups with other code-review checks
    schema: code-review # Uses built-in code-review schema
    prompt: |
      Perform comprehensive security analysis focusing on:
      - SQL injection vulnerabilities
      - XSS attack vectors  
      - Authentication/authorization issues
      - Sensitive data exposure
      - Input validation and sanitization
      - Unsafe eval() usage
      - Environment variable security
      
      Return results in JSON format matching the code-review schema.
    on: [pr_opened, pr_updated]

  performance:
    type: ai
    group: code-review  # Same group - will be in same comment
    schema: code-review
    prompt: |
      Review for performance issues:
      - N+1 database queries
      - Memory leaks and excessive allocations
      - Inefficient algorithms and data structures
      - Missing caching opportunities
      - Unnecessary async operations
      - Large file processing without streaming
      - Blocking operations in event loops
      
      Return results in JSON format matching the code-review schema.
    on: [pr_opened, pr_updated]

  style:
    type: ai
    group: code-review
    schema: code-review
    prompt: |
      Check for style and consistency issues:
      - Naming conventions adherence
      - Code formatting consistency
      - Comment quality and documentation
      - Import organization
      - Consistent error handling patterns
      - TypeScript best practices
      
      Return results in JSON format matching the code-review schema.
    on: [pr_opened]
    depends_on: [security]

  architecture:
    type: ai
    group: code-review
    schema: code-review
    prompt: |
      Analyze architectural aspects building on security and performance findings:
      - SOLID principles adherence
      - Design pattern usage appropriateness
      - Circular dependencies
      - Module coupling and cohesion
      - Error handling architecture
      - Separation of concerns
      - Code reusability and maintainability
      
      Return results in JSON format matching the code-review schema.
    on: [pr_opened, pr_updated]
    depends_on: [security, performance]

  # This check uses different group - will be separate comment
  overview:
    type: ai
    group: summary  # Different group = separate comment
    schema: overview # Uses built-in overview schema with text + tags
    prompt: |
      Provide a high-level overview of this pull request in markdown format and return JSON matching the `overview` schema (with `text` and `tags`).
      
      ## ðŸ“‹ Pull Request Summary
      
      Analyze the changes and provide:
      1. **What Changed**: Brief summary of modified files and their purpose
      2. **Why**: The apparent goal/reason for these changes
      3. **Impact**: What parts of the system are affected
      4. **Risks**: Any potential issues to watch out for
      
      Keep it concise but informative. Use proper markdown formatting.
    on: [pr_opened, pr_updated]
    depends_on: [security, performance, style, architecture]

  # Another separate group for architecture diagrams
  architecture-diagram:
    type: ai
    group: diagrams
    schema: markdown
    prompt: |
      Create an architecture overview with mermaid diagram showing the relationships 
      between components affected by this PR.
      
      Format as markdown with:
      1. Brief explanation of architectural changes
      2. Mermaid diagram in code block showing component relationships
      
      Example:
      ```mermaid
      graph TD
        A[Component A] --> B[Component B]
        B --> C[Database]
      ```
      
      Focus on structural relationships, not implementation details.
    on: [pr_opened]
    enabled: false  # Can be enabled when needed

# Schema references - can be built-in names, file paths, or URLs
schemas:
  # Built-in schemas are automatically available
  # Custom schemas can be defined here or referenced
  custom-metrics:
    file: "./custom-schemas/metrics.json"
  external-schema:
    url: "https://myorg.com/schemas/compliance.json"
