"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnvMocker = void 0;
const env_mocker_types_1 = require("../../github/env/env-mocker.types");
class EnvMocker {
    constructor(env) {
        this.envFromConfig = env;
        this.currentEnv = env ? env : env_mocker_types_1.DEFAULT_ENV;
    }
    update(key, value) {
        process.env[`${env_mocker_types_1.ENV_PREFIX}${key.toUpperCase()}`] = value;
        this.currentEnv[key] = value;
    }
    delete(key) {
        let value = "";
        if (Object.keys(this.currentEnv).includes(key)) {
            value = this.currentEnv[key];
            delete process.env[`${env_mocker_types_1.ENV_PREFIX}${key.toUpperCase()}`];
            delete this.currentEnv[key];
        }
        return value;
    }
    get(key) {
        if (key) {
            return this.currentEnv[key] ?? process.env[key] ?? "";
        }
        return this.currentEnv;
    }
    async setup() {
        if (!this.envFromConfig) {
            return;
        }
        this.currentEnv = this.envFromConfig;
        Object.keys(this.currentEnv).forEach(key => {
            this.update(key, this.currentEnv[key]);
        });
    }
    async teardown() {
        if (!this.envFromConfig) {
            return;
        }
        const env = this.envFromConfig;
        Object.keys(env).forEach(key => {
            this.delete(key);
        });
        this.currentEnv = env_mocker_types_1.DEFAULT_ENV;
    }
}
exports.EnvMocker = EnvMocker;
