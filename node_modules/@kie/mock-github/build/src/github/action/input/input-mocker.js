"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InputMocker = void 0;
const input_mocker_types_1 = require("../../../github/action/input/input-mocker.types");
class InputMocker {
    constructor(input) {
        this.inputFromConfig = input;
        this.currentInput = input ? input : input_mocker_types_1.DEFAULT_INPUT;
    }
    update(key, value) {
        process.env[`${input_mocker_types_1.INPUT_PREFIX}${key.replace(/ /g, "_").toUpperCase()}`] =
            value;
        this.currentInput[key] = value;
    }
    delete(key) {
        let value = "";
        if (Object.keys(this.currentInput).includes(key)) {
            value = this.currentInput[key];
            delete process.env[`${input_mocker_types_1.INPUT_PREFIX}${key.replace(/ /g, "_").toUpperCase()}`];
            delete this.currentInput[key];
        }
        return value;
    }
    get(key) {
        if (key) {
            return this.currentInput[key] ?? "";
        }
        return this.currentInput;
    }
    async setup() {
        if (!this.inputFromConfig) {
            return;
        }
        Object.keys(this.inputFromConfig).forEach(key => {
            this.update(key, this.inputFromConfig[key]);
        });
    }
    async teardown() {
        Object.keys(this.currentInput).forEach(key => {
            this.delete(key);
        });
        this.currentInput = input_mocker_types_1.DEFAULT_INPUT;
    }
}
exports.InputMocker = InputMocker;
