"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionMocker = void 0;
const archive_mocker_1 = require("../../github/action/archive/archive-mocker");
const input_mocker_1 = require("../../github/action/input/input-mocker");
class ActionMocker {
    constructor(action, setupPath) {
        this.inputMocker = new input_mocker_1.InputMocker(action?.input);
        this.archiveArtifactsMocker = new archive_mocker_1.ArchiveArtifactsMocker(setupPath, action?.archive?.serverPort);
    }
    async setup() {
        await Promise.all([
            this.inputMocker.setup(),
            this.archiveArtifactsMocker.setup(),
        ]);
    }
    async teardown() {
        await Promise.all([
            this.inputMocker.teardown(),
            this.archiveArtifactsMocker.teardown(),
        ]);
    }
    get input() {
        return {
            get: this.inputMocker.get.bind(this.inputMocker),
            delete: this.inputMocker.delete.bind(this.inputMocker),
            update: this.inputMocker.update.bind(this.inputMocker),
        };
    }
    get archiver() {
        return {
            getArtifactStore: this.archiveArtifactsMocker.getArtifactStore.bind(this.archiveArtifactsMocker),
            getRunId: this.archiveArtifactsMocker.getRunId.bind(this.archiveArtifactsMocker),
        };
    }
}
exports.ActionMocker = ActionMocker;
