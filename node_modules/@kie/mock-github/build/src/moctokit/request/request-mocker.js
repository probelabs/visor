"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MoctokitRequestMocker = void 0;
const response_mocker_1 = require("../../moctokit/response/response-mocker");
const abstract_request_mocker_1 = require("../../endpoint-mocker/request/abstract-request-mocker");
class MoctokitRequestMocker extends abstract_request_mocker_1.RequestMocker {
    constructor(baseUrl, endpointDetails, allowUnmocked = false) {
        super(baseUrl, endpointDetails, allowUnmocked);
        // need to bind the instance context to the function. otherwise it is lost during endpointToMethod generation
        this.request = this.request.bind(this);
    }
    request(params) {
        const { path, query, requestBody } = this.parseParams(params);
        return new response_mocker_1.MoctokitResponseMocker(this.baseUrl, path, this.endpointDetails.method, query, requestBody, this.allowUnmocked);
    }
}
exports.MoctokitRequestMocker = MoctokitRequestMocker;
