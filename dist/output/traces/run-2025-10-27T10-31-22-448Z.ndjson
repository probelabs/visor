{"name":"visor.run","attributes":{"started":true}}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"High‑level summary of the changes and impact.\\n\",\"tags\":{\"label\":\"feature\",\"review-effort\":2}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"High‑level summary of the changes and impact.\\n\",\"tags\":{\"label\":\"feature\",\"review-effort\":2}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"High‑level summary of the changes and impact.\\n\",\"tags\":{\"label\":\"feature\",\"review-effort\":2}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"High‑level summary of the changes and impact.\\n\",\"tags\":{\"label\":\"feature\",\"review-effort\":2}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[{\"file\":\"src/search.ts\",\"line\":1,\"ruleId\":\"review/unretrievable-code\",\"message\":\"Unable to perform the code review. The pull request metadata indicates this file was added, but the provided diff is empty and the file content could not be retrieved. Without the code changes, an architectural analysis cannot be performed.\",\"severity\":\"critical\",\"category\":\"architecture\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"check","name":"architecture_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"check","name":"architecture_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"check","name":"architecture_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"check","name":"architecture_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"check","name":"architecture_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[{\"file\":\"src/search.ts\",\"line\":1,\"ruleId\":\"review/missing-code\",\"message\":\"Unable to perform code review. The pull request's file summary indicates changes to 'src/search.ts', but the provided diff is empty and the file content could not be retrieved. Please ensure the full diff is included in the request.\",\"severity\":\"critical\",\"category\":\"architecture\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"check","name":"quality_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"check","name":"quality_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"check","name":"quality_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"check","name":"quality_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"check","name":"quality_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
