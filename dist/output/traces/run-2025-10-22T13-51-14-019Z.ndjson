{"name":"visor.run","attributes":{"started":true}}
{"name":"visor.run","attributes":{"started":true}}
{"name":"visor.run","attributes":{"started":true}}
{"name":"visor.run","attributes":{"started":true}}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":0,\"title\":\"Local Analysis: main (1 modified)\",\"author\":\"GitHub Action\",\"branch\":\"main\",\"base\":\"main\"},\"files\":[{\"filename\":\"README.md\",\"additions\":2,\"deletions\":2,\"changes\":4,\"patch\":\"diff --git a/README.md b/README.md\\nindex 49ef66bb..2f2b43cd 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,4 +1,4 @@\\n-<div align=\\\"center\\\">\\n+div align=\\\"center\\\">\\n   <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n   \\n   # Visor — Open‑source SDLC automation & code review orchestration\\n\",\"status\":\"modified\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.output":"{\"text\":\"This pull request contains a minor documentation update to the `README.md` file. The change consists of two additions and two deletions. The provided diff was malformed, preventing a precise analysis of the content changes, but the scope is confirmed to be limited to the main README file.\\n\\n## Files Changed Analysis\\n\\n- **`README.md`**: Modified (+2, -2). A small documentation update.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: The PR applies a minor update to the project's `README.md` file.\\n- **Key technical changes introduced**: There are no technical or code changes. The modifications are purely documentary.\\n- **Affected system components**: No system components are affected. This change only impacts project documentation and has no effect on the application's runtime behavior.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The scope of this change is strictly limited to the `README.md` file.\\n- There is no impact on other modules, services, or system boundaries.\\n- No further code exploration is necessary for this documentation change.\",\"tags\":{\"review-effort\":1,\"label\":\"documentation\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":0,\"title\":\"Local Analysis: main (1 modified)\",\"author\":\"GitHub Action\",\"branch\":\"main\",\"base\":\"main\"},\"files\":[{\"filename\":\"README.md\",\"additions\":2,\"deletions\":2,\"changes\":4,\"patch\":\"diff --git a/README.md b/README.md\\nindex 49ef66bb..2f2b43cd 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,4 +1,4 @@\\n-<div align=\\\"center\\\">\\n+div align=\\\"center\\\">\\n   <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n   \\n   # Visor — Open‑source SDLC automation & code review orchestration\\n\",\"status\":\"modified\"}],\"outputs\":{\"overview\":{\"text\":\"This pull request contains a minor documentation update to the `README.md` file. The change consists of two additions and two deletions. The provided diff was malformed, preventing a precise analysis of the content changes, but the scope is confirmed to be limited to the main README file.\\n\\n## Files Changed Analysis\\n\\n- **`README.md`**: Modified (+2, -2). A small documentation update.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: The PR applies a minor update to the project's `README.md` file.\\n- **Key technical changes introduced**: There are no technical or code changes. The modifications are purely documentary.\\n- **Affected system components**: No system components are affected. This change only impacts project documentation and has no effect on the application's runtime behavior.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The scope of this change is strictly limited to the `README.md` file.\\n- There is no impact on other modules, services, or system boundaries.\\n- No further code exploration is necessary for this documentation change.\",\"tags\":{\"review-effort\":1,\"label\":\"documentation\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":0,\"title\":\"Local Analysis: main (1 modified)\",\"author\":\"GitHub Action\",\"branch\":\"main\",\"base\":\"main\"},\"files\":[{\"filename\":\"README.md\",\"additions\":2,\"deletions\":2,\"changes\":4,\"patch\":\"diff --git a/README.md b/README.md\\nindex 49ef66bb..2f2b43cd 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,4 +1,4 @@\\n-<div align=\\\"center\\\">\\n+div align=\\\"center\\\">\\n   <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n   \\n   # Visor — Open‑source SDLC automation & code review orchestration\\n\",\"status\":\"modified\"}],\"outputs\":{\"overview\":{\"text\":\"This pull request contains a minor documentation update to the `README.md` file. The change consists of two additions and two deletions. The provided diff was malformed, preventing a precise analysis of the content changes, but the scope is confirmed to be limited to the main README file.\\n\\n## Files Changed Analysis\\n\\n- **`README.md`**: Modified (+2, -2). A small documentation update.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: The PR applies a minor update to the project's `README.md` file.\\n- **Key technical changes introduced**: There are no technical or code changes. The modifications are purely documentary.\\n- **Affected system components**: No system components are affected. This change only impacts project documentation and has no effect on the application's runtime behavior.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The scope of this change is strictly limited to the `README.md` file.\\n- There is no impact on other modules, services, or system boundaries.\\n- No further code exploration is necessary for this documentation change.\",\"tags\":{\"review-effort\":1,\"label\":\"documentation\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":0,\"title\":\"Local Analysis: main (1 modified)\",\"author\":\"GitHub Action\",\"branch\":\"main\",\"base\":\"main\"},\"files\":[{\"filename\":\"README.md\",\"additions\":2,\"deletions\":2,\"changes\":4,\"patch\":\"diff --git a/README.md b/README.md\\nindex 49ef66bb..2f2b43cd 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,4 +1,4 @@\\n-<div align=\\\"center\\\">\\n+div align=\\\"center\\\">\\n   <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n   \\n   # Visor — Open‑source SDLC automation & code review orchestration\\n\",\"status\":\"modified\"}],\"outputs\":{\"overview\":{\"text\":\"This pull request contains a minor documentation update to the `README.md` file. The change consists of two additions and two deletions. The provided diff was malformed, preventing a precise analysis of the content changes, but the scope is confirmed to be limited to the main README file.\\n\\n## Files Changed Analysis\\n\\n- **`README.md`**: Modified (+2, -2). A small documentation update.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: The PR applies a minor update to the project's `README.md` file.\\n- **Key technical changes introduced**: There are no technical or code changes. The modifications are purely documentary.\\n- **Affected system components**: No system components are affected. This change only impacts project documentation and has no effect on the application's runtime behavior.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The scope of this change is strictly limited to the `README.md` file.\\n- There is no impact on other modules, services, or system boundaries.\\n- No further code exploration is necessary for this documentation change.\",\"tags\":{\"review-effort\":1,\"label\":\"documentation\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":0,\"title\":\"Local Analysis: main (1 modified)\",\"author\":\"GitHub Action\",\"branch\":\"main\",\"base\":\"main\"},\"files\":[{\"filename\":\"README.md\",\"additions\":2,\"deletions\":2,\"changes\":4,\"patch\":\"diff --git a/README.md b/README.md\\nindex 49ef66bb..2f2b43cd 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,4 +1,4 @@\\n-<div align=\\\"center\\\">\\n+div align=\\\"center\\\">\\n   <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n   \\n   # Visor — Open‑source SDLC automation & code review orchestration\\n\",\"status\":\"modified\"}],\"outputs\":{\"overview\":{\"text\":\"This pull request contains a minor documentation update to the `README.md` file. The change consists of two additions and two deletions. The provided diff was malformed, preventing a precise analysis of the content changes, but the scope is confirmed to be limited to the main README file.\\n\\n## Files Changed Analysis\\n\\n- **`README.md`**: Modified (+2, -2). A small documentation update.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: The PR applies a minor update to the project's `README.md` file.\\n- **Key technical changes introduced**: There are no technical or code changes. The modifications are purely documentary.\\n- **Affected system components**: No system components are affected. This change only impacts project documentation and has no effect on the application's runtime behavior.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The scope of this change is strictly limited to the `README.md` file.\\n- There is no impact on other modules, services, or system boundaries.\\n- No further code exploration is necessary for this documentation change.\",\"tags\":{\"review-effort\":1,\"label\":\"documentation\"}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[],\"debug\":{\"prompt\":\"<review_request>\\n  <analysis_type>FULL</analysis_type>\\n\\n  <analysis_focus>\\n    You are analyzing the COMPLETE PR. Review all changes in the full_diff section.\\n  </analysis_focus>\\n\\n  <instructions>\\nBuilding on our overview discussion, evaluate the code quality and maintainability.\\n\\nReview the code changes shown in the `<full_diff>` or `<commit_diff>` sections, considering the files listed in `<files_summary>`.\\n\\n## Quality Assessment Areas\\n**Code Structure & Design:**\\n- SOLID principles adherence\\n- Design pattern appropriateness\\n- Separation of concerns\\n- Code organization and clarity\\n\\n**Error Handling & Reliability:**\\n- Exception handling completeness\\n- Error propagation patterns\\n- Input validation thoroughness\\n- Edge case coverage\\n\\n**Testing & Test Coverage:**\\n- Missing tests for critical functionality\\n- Test coverage gaps\\n- Test quality and effectiveness\\n- Edge cases and error scenarios coverage\\n\\n**Test Quality - Critical Checks:**\\n- **Magic Numbers in Tests**: Are tests using hard-coded values just to make assertions pass?\\n  - Look for arbitrary numbers without clear meaning (e.g., `expect(result).toBe(42)` where 42 has no semantic meaning)\\n  - Tests should use meaningful constants or derive expected values from the input\\n  - Tests that \\\"cut corners\\\" by adjusting expected values to match output are fragile\\n  - Flag tests where the expected value seems arbitrary or reverse-engineered from implementation\\n- **Test Integrity**: Do tests actually validate correct behavior or just check current behavior?\\n  - Are tests meaningful and would catch real bugs?\\n  - Do tests explain why a value should be expected (through variable names, comments, or clear logic)?\\n  - Are test assertions based on requirements rather than implementation details?\\n- **Negative Testing Coverage**: Are failure cases and error conditions properly tested?\\n  - Are there tests for invalid inputs, boundary conditions, and error states?\\n  - Do tests verify error messages and error handling paths?\\n  - Are edge cases like null, empty, undefined, zero, negative values tested?\\n  - Do tests cover \\\"unhappy path\\\" scenarios (authentication failures, network errors, invalid data)?\\n  - Are exception handling and error recovery mechanisms validated?\\n  - Flag missing negative tests for critical functionality\\n\\n**Maintainability:**\\n- Code testability issues\\n- Dependencies and coupling problems\\n- Technical debt introduction\\n- Code duplication (DRY violations)\\n\\n**Language-Specific Best Practices:**\\n- Idiomatic code usage\\n- Framework/library best practices\\n- Type safety (if applicable)\\n\\nFocus on actionable improvements that enhance code maintainability based on the overview analysis.\\nPay special attention to test quality - tests that use magic numbers or cut corners undermine reliability.\\n\\n## Severity Guidelines\\nUse the following severity levels appropriately:\\n- **critical**: Code quality issues that will cause bugs or failures (logic errors, race conditions, null pointer issues)\\n- **error**: Quality problems that significantly impact maintainability (no error handling, high complexity, severe coupling, tests with magic numbers)\\n- **warning**: Quality concerns that should be addressed (missing tests, code duplication, poor naming, unclear test expectations)\\n- **info**: Best practices and improvement suggestions (refactoring opportunities, documentation improvements, test clarity)\\n\\n  </instructions>\\n\\n  <context>\\n<pull_request>\\n  <!-- Core pull request metadata including identification, branches, and change statistics -->\\n  <metadata>\\n    <number>0</number>\\n    <title>Local Analysis: main (1 modified)</title>\\n    <author>GitHub Action</author>\\n    <base_branch>main</base_branch>\\n    <target_branch>main</target_branch>\\n    <total_additions>2</total_additions>\\n    <total_deletions>2</total_deletions>\\n    <files_changed_count>1</files_changed_count>\\n  </metadata>\\n  <!-- Full pull request description provided by the author -->\\n  <description>\\nAnalysis of local git repository working directory.\\n\\n**Last Commit:** build: update bundled dist files\\n**Author:** GitHub Action <action@github.com>\\n**Date:** 2025-10-22T13:38:20Z\\n\\n**Changes Summary:**\\n- Files to be committed: 0\\n- Modified files: 1\\n- Untracked files: 0\\n\\n  </description>\\n  <!-- Complete unified diff showing all changes in the pull request (processed with outline-diff) -->\\n  <full_diff>\\nProbe version: 0.6.0\\nReading from stdin...\\nFiles to extract:\\n  README.md\\n  a/README.md\\n  b/README.md\\n  site/visor.png\\nFormat: outline-diff\\n\\ndiff --git a/README.md b/README.md\\nindex 00000000..11111111 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,694 +1,694 @@ div align=\\\"center\\\">\\n1  div align=\\\"center\\\">\\n2    <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n3    \\n4    # Visor — Open‑source SDLC automation & code review orchestration\\n5    \\n6    [![TypeScript](https://img.shields.io/badge/TypeScript-5.0%2B-blue)](https://www.typescriptlang.org/)\\n7    [![Node](https://img.shields.io/badge/Node.js-18%2B-green)](https://nodejs.org/)\\n\\n\\nEncountered 3 errors\\n\\nToken Usage:\\n  Request tokens: 76.5\\n  Response tokens: 0\\n  Total tokens: 0\\n\\n  </full_diff>\\n  <!-- Summary of all files changed with statistics -->\\n  <files_summary>\\n    <file>\\n      <filename>README.md</filename>\\n      <status>modified</status>\\n      <additions>2</additions>\\n      <deletions>2</deletions>\\n    </file>\\n  </files_summary>\\n</pull_request>\\n  </context>\\n\\n  <rules>\\n    <rule>Only analyze code that appears with + (additions) or - (deletions) in the diff sections</rule>\\n    <rule>Ignore unchanged code unless directly relevant to understanding a change</rule>\\n    <rule>Line numbers in your response should match actual file line numbers from the diff</rule>\\n    <rule>Focus on real issues, not nitpicks or cosmetic concerns</rule>\\n    <rule>Provide actionable, specific feedback with clear remediation steps</rule>\\n    <rule>For INCREMENTAL analysis, ONLY review changes in commit_diff section</rule>\\n    <rule>For FULL analysis, review all changes in full_diff section</rule>\\n    <rule>Reference specific XML elements like files_summary, metadata when providing context</rule>\\n    <rule>STRICT OUTPUT POLICY: Report only actual problems, risks, or deficiencies. Do not write praise, congratulations, or celebratory text. Do not create issues that merely restate improvements or say \\\"no action needed\\\".</rule>\\n    <rule>SEVERITY ASSIGNMENT: Assign severity ONLY to problems introduced or left unresolved by this change (critical/error/warning/info as appropriate). Do NOT create issue entries solely to acknowledge improvements; if no problems exist, return zero issues.</rule>\\n  </rules>\\n</review_request>\",\"rawResponse\":\"{\\n  \\\"issues\\\": []\\n}\",\"provider\":\"google\",\"model\":\"default\",\"apiKeySource\":\"GOOGLE_API_KEY\",\"processingTime\":30654,\"promptLength\":6645,\"responseLength\":18,\"errors\":[],\"jsonParseSuccess\":true,\"timestamp\":\"2025-10-22T13:52:22.905Z\",\"schemaName\":\"code-review\",\"schema\":\"{\\n  \\\"schema\\\": \\\"{\\\\n  \\\\\\\"$schema\\\\\\\": \\\\\\\"http://json-schema.org/draft-07/schema#\\\\\\\",\\\\n  \\\\\\\"$id\\\\\\\": \\\\\\\"code-review\\\\\\\",\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"Code Review\\\\\\\",\\\\n  \\\\\\\"description\\\\\\\": \\\\\\\"Structured format for code review issues. CRITICAL: Return ONLY a valid JSON object matching this schema. Do NOT include prose, explanations, markdown, or XML tags. Start your response with { and end with }.\\\\\\\",\\\\n  \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n  \\\\\\\"required\\\\\\\": [\\\\\\\"issues\\\\\\\"],\\\\n  \\\\\\\"properties\\\\\\\": {\\\\n    \\\\\\\"issues\\\\\\\": {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"array\\\\\\\",\\\\n      \\\\\\\"description\\\\\\\": \\\\\\\"List of issues found during code review\\\\\\\",\\\\n      \\\\\\\"items\\\\\\\": {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n        \\\\\\\"required\\\\\\\": [\\\\\\\"file\\\\\\\", \\\\\\\"line\\\\\\\", \\\\\\\"ruleId\\\\\\\", \\\\\\\"message\\\\\\\", \\\\\\\"severity\\\\\\\"],\\\\n        \\\\\\\"properties\\\\\\\": {\\\\n          \\\\\\\"file\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"File path relative to repository root\\\\\\\"\\\\n          },\\\\n          \\\\\\\"line\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"integer\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Line number where issue starts\\\\\\\",\\\\n            \\\\\\\"minimum\\\\\\\": 1\\\\n          },\\\\n          \\\\\\\"endLine\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"integer\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Line number where issue ends\\\\\\\",\\\\n            \\\\\\\"minimum\\\\\\\": 1\\\\n          },\\\\n          \\\\\\\"ruleId\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Rule identifier (e.g., 'security/sql-injection')\\\\\\\",\\\\n            \\\\\\\"pattern\\\\\\\": \\\\\\\"^[a-z-]+/[a-z-]+$\\\\\\\"\\\\n          },\\\\n          \\\\\\\"message\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Clear description of the issue\\\\\\\"\\\\n          },\\\\n          \\\\\\\"severity\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"enum\\\\\\\": [\\\\\\\"warning\\\\\\\", \\\\\\\"error\\\\\\\", \\\\\\\"critical\\\\\\\"],\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Issue severity level based on the NEW CODE being introduced: warning (should fix), error (must fix), critical (NEW security vulnerabilities, data loss risks, or breaking changes that block deployment). IMPORTANT: Use 'critical' ONLY when NEW problematic code is INTRODUCED, NOT when existing issues are being FIXED. CRITICAL: Your entire response must be a single valid JSON object matching this schema - do not include any prose, explanations, markdown, or XML tags outside the JSON.\\\\\\\"\\\\n          },\\\\n          \\\\\\\"category\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Issue category\\\\\\\",\\\\n            \\\\\\\"enum\\\\\\\": [\\\\\\\"security\\\\\\\", \\\\\\\"performance\\\\\\\", \\\\\\\"style\\\\\\\", \\\\\\\"logic\\\\\\\", \\\\\\\"documentation\\\\\\\", \\\\\\\"architecture\\\\\\\"]\\\\n          },\\\\n          \\\\\\\"suggestion\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"How to fix the issue\\\\\\\"\\\\n          },\\\\n          \\\\\\\"replacement\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Code to replace the problematic lines\\\\\\\"\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\"\\n}\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"style","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"style","visor.check.input.context":"{\"pr\":{\"number\":0,\"title\":\"Local Analysis: main (1 modified)\",\"author\":\"GitHub Action\",\"branch\":\"main\",\"base\":\"main\"},\"files\":[{\"filename\":\"README.md\",\"additions\":2,\"deletions\":2,\"changes\":4,\"patch\":\"diff --git a/README.md b/README.md\\nindex 49ef66bb..2f2b43cd 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,4 +1,4 @@\\n-<div align=\\\"center\\\">\\n+div align=\\\"center\\\">\\n   <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n   \\n   # Visor — Open‑source SDLC automation & code review orchestration\\n\",\"status\":\"modified\"}],\"outputs\":{\"overview\":{\"text\":\"This pull request contains a minor documentation update to the `README.md` file. The change consists of two additions and two deletions. The provided diff was malformed, preventing a precise analysis of the content changes, but the scope is confirmed to be limited to the main README file.\\n\\n## Files Changed Analysis\\n\\n- **`README.md`**: Modified (+2, -2). A small documentation update.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: The PR applies a minor update to the project's `README.md` file.\\n- **Key technical changes introduced**: There are no technical or code changes. The modifications are purely documentary.\\n- **Affected system components**: No system components are affected. This change only impacts project documentation and has no effect on the application's runtime behavior.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The scope of this change is strictly limited to the `README.md` file.\\n- There is no impact on other modules, services, or system boundaries.\\n- No further code exploration is necessary for this documentation change.\",\"tags\":{\"review-effort\":1,\"label\":\"documentation\"}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[],\"debug\":{\"prompt\":\"<review_request>\\n  <analysis_type>FULL</analysis_type>\\n\\n  <analysis_focus>\\n    You are analyzing the COMPLETE PR. Review all changes in the full_diff section.\\n  </analysis_focus>\\n\\n  <instructions>\\nBuilding on our overview analysis, now review the code changes for performance issues.\\n\\nFocus on the files listed in `<files_summary>` and analyze the code changes shown in the `<full_diff>` or `<commit_diff>` sections.\\n\\n## Performance Analysis Areas\\n**Algorithm & Data Structure Efficiency:**\\n- Time complexity analysis (O(n), O(n²), etc.)\\n- Space complexity and memory usage\\n- Inefficient loops and nested operations\\n- Suboptimal data structure choices\\n\\n**Database Performance:**\\n- N+1 query problems\\n- Missing database indexes\\n- Inefficient JOIN operations\\n- Large result set retrievals\\n\\n**Resource Management:**\\n- Memory leaks and excessive allocations\\n- File handle management\\n- Connection pooling issues\\n- Resource cleanup patterns\\n\\n**Async & Concurrency:**\\n- Blocking operations in async contexts\\n- Race conditions and deadlocks\\n- Inefficient parallel processing\\n\\nBuilding on our overview analysis, identify performance issues and provide optimization recommendations.\\n\\n## Severity Guidelines\\nUse the following severity levels appropriately:\\n- **critical**: Performance issues causing system failure or severe degradation (infinite loops, memory leaks causing OOM)\\n- **error**: Significant performance problems affecting user experience (O(n²) in critical path, N+1 queries, blocking I/O)\\n- **warning**: Performance concerns that should be optimized (inefficient algorithms, missing indexes, unnecessary operations)\\n- **info**: Performance best practices and optimization opportunities (caching suggestions, async improvements)\\n\\n  </instructions>\\n\\n  <context>\\n<pull_request>\\n  <!-- Core pull request metadata including identification, branches, and change statistics -->\\n  <metadata>\\n    <number>0</number>\\n    <title>Local Analysis: main (1 modified)</title>\\n    <author>GitHub Action</author>\\n    <base_branch>main</base_branch>\\n    <target_branch>main</target_branch>\\n    <total_additions>2</total_additions>\\n    <total_deletions>2</total_deletions>\\n    <files_changed_count>1</files_changed_count>\\n  </metadata>\\n  <!-- Full pull request description provided by the author -->\\n  <description>\\nAnalysis of local git repository working directory.\\n\\n**Last Commit:** build: update bundled dist files\\n**Author:** GitHub Action <action@github.com>\\n**Date:** 2025-10-22T13:38:20Z\\n\\n**Changes Summary:**\\n- Files to be committed: 0\\n- Modified files: 1\\n- Untracked files: 0\\n\\n  </description>\\n  <!-- Complete unified diff showing all changes in the pull request (processed with outline-diff) -->\\n  <full_diff>\\nProbe version: 0.6.0\\nReading from stdin...\\nFiles to extract:\\n  README.md\\n  a/README.md\\n  b/README.md\\n  site/visor.png\\nFormat: outline-diff\\n\\ndiff --git a/README.md b/README.md\\nindex 00000000..11111111 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,694 +1,694 @@ div align=\\\"center\\\">\\n1  div align=\\\"center\\\">\\n2    <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n3    \\n4    # Visor — Open‑source SDLC automation & code review orchestration\\n5    \\n6    [![TypeScript](https://img.shields.io/badge/TypeScript-5.0%2B-blue)](https://www.typescriptlang.org/)\\n7    [![Node](https://img.shields.io/badge/Node.js-18%2B-green)](https://nodejs.org/)\\n\\n\\nEncountered 3 errors\\n\\nToken Usage:\\n  Request tokens: 76.5\\n  Response tokens: 0\\n  Total tokens: 0\\n\\n  </full_diff>\\n  <!-- Summary of all files changed with statistics -->\\n  <files_summary>\\n    <file>\\n      <filename>README.md</filename>\\n      <status>modified</status>\\n      <additions>2</additions>\\n      <deletions>2</deletions>\\n    </file>\\n  </files_summary>\\n</pull_request>\\n  </context>\\n\\n  <rules>\\n    <rule>Only analyze code that appears with + (additions) or - (deletions) in the diff sections</rule>\\n    <rule>Ignore unchanged code unless directly relevant to understanding a change</rule>\\n    <rule>Line numbers in your response should match actual file line numbers from the diff</rule>\\n    <rule>Focus on real issues, not nitpicks or cosmetic concerns</rule>\\n    <rule>Provide actionable, specific feedback with clear remediation steps</rule>\\n    <rule>For INCREMENTAL analysis, ONLY review changes in commit_diff section</rule>\\n    <rule>For FULL analysis, review all changes in full_diff section</rule>\\n    <rule>Reference specific XML elements like files_summary, metadata when providing context</rule>\\n    <rule>STRICT OUTPUT POLICY: Report only actual problems, risks, or deficiencies. Do not write praise, congratulations, or celebratory text. Do not create issues that merely restate improvements or say \\\"no action needed\\\".</rule>\\n    <rule>SEVERITY ASSIGNMENT: Assign severity ONLY to problems introduced or left unresolved by this change (critical/error/warning/info as appropriate). Do NOT create issue entries solely to acknowledge improvements; if no problems exist, return zero issues.</rule>\\n  </rules>\\n</review_request>\",\"rawResponse\":\"{\\n  \\\"issues\\\": []\\n}\",\"provider\":\"google\",\"model\":\"default\",\"apiKeySource\":\"GOOGLE_API_KEY\",\"processingTime\":33771,\"promptLength\":4990,\"responseLength\":18,\"errors\":[],\"jsonParseSuccess\":true,\"timestamp\":\"2025-10-22T13:52:22.905Z\",\"schemaName\":\"code-review\",\"schema\":\"{\\n  \\\"schema\\\": \\\"{\\\\n  \\\\\\\"$schema\\\\\\\": \\\\\\\"http://json-schema.org/draft-07/schema#\\\\\\\",\\\\n  \\\\\\\"$id\\\\\\\": \\\\\\\"code-review\\\\\\\",\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"Code Review\\\\\\\",\\\\n  \\\\\\\"description\\\\\\\": \\\\\\\"Structured format for code review issues. CRITICAL: Return ONLY a valid JSON object matching this schema. Do NOT include prose, explanations, markdown, or XML tags. Start your response with { and end with }.\\\\\\\",\\\\n  \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n  \\\\\\\"required\\\\\\\": [\\\\\\\"issues\\\\\\\"],\\\\n  \\\\\\\"properties\\\\\\\": {\\\\n    \\\\\\\"issues\\\\\\\": {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"array\\\\\\\",\\\\n      \\\\\\\"description\\\\\\\": \\\\\\\"List of issues found during code review\\\\\\\",\\\\n      \\\\\\\"items\\\\\\\": {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n        \\\\\\\"required\\\\\\\": [\\\\\\\"file\\\\\\\", \\\\\\\"line\\\\\\\", \\\\\\\"ruleId\\\\\\\", \\\\\\\"message\\\\\\\", \\\\\\\"severity\\\\\\\"],\\\\n        \\\\\\\"properties\\\\\\\": {\\\\n          \\\\\\\"file\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"File path relative to repository root\\\\\\\"\\\\n          },\\\\n          \\\\\\\"line\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"integer\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Line number where issue starts\\\\\\\",\\\\n            \\\\\\\"minimum\\\\\\\": 1\\\\n          },\\\\n          \\\\\\\"endLine\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"integer\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Line number where issue ends\\\\\\\",\\\\n            \\\\\\\"minimum\\\\\\\": 1\\\\n          },\\\\n          \\\\\\\"ruleId\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Rule identifier (e.g., 'security/sql-injection')\\\\\\\",\\\\n            \\\\\\\"pattern\\\\\\\": \\\\\\\"^[a-z-]+/[a-z-]+$\\\\\\\"\\\\n          },\\\\n          \\\\\\\"message\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Clear description of the issue\\\\\\\"\\\\n          },\\\\n          \\\\\\\"severity\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"enum\\\\\\\": [\\\\\\\"warning\\\\\\\", \\\\\\\"error\\\\\\\", \\\\\\\"critical\\\\\\\"],\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Issue severity level based on the NEW CODE being introduced: warning (should fix), error (must fix), critical (NEW security vulnerabilities, data loss risks, or breaking changes that block deployment). IMPORTANT: Use 'critical' ONLY when NEW problematic code is INTRODUCED, NOT when existing issues are being FIXED. CRITICAL: Your entire response must be a single valid JSON object matching this schema - do not include any prose, explanations, markdown, or XML tags outside the JSON.\\\\\\\"\\\\n          },\\\\n          \\\\\\\"category\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Issue category\\\\\\\",\\\\n            \\\\\\\"enum\\\\\\\": [\\\\\\\"security\\\\\\\", \\\\\\\"performance\\\\\\\", \\\\\\\"style\\\\\\\", \\\\\\\"logic\\\\\\\", \\\\\\\"documentation\\\\\\\", \\\\\\\"architecture\\\\\\\"]\\\\n          },\\\\n          \\\\\\\"suggestion\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"How to fix the issue\\\\\\\"\\\\n          },\\\\n          \\\\\\\"replacement\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Code to replace the problematic lines\\\\\\\"\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\"\\n}\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[],\"debug\":{\"prompt\":\"<review_request>\\n  <analysis_type>FULL</analysis_type>\\n\\n  <analysis_focus>\\n    You are analyzing the COMPLETE PR. Review all changes in the full_diff section.\\n  </analysis_focus>\\n\\n  <instructions>\\nBuilding on our overview analysis, evaluate the architectural decisions and design patterns.\\n\\nFocus on the files listed in `<files_summary>` and analyze the code changes shown in the `<full_diff>` or `<commit_diff>` sections.\\n\\n## Architecture Analysis Areas\\n**Design Simplicity & Pragmatism:**\\n- Over-engineering: Is the solution more complex than necessary?\\n- YAGNI violations: Are we building features not currently needed?\\n- Can this be implemented more simply using existing patterns?\\n- Are there existing functions/modules that could be reused instead?\\n- Is the abstraction level appropriate for the problem size?\\n\\n**Special Cases & Edge Cases:**\\n- Does the code introduce special case handling that could be generalized?\\n- Are there hard-coded values or logic for specific scenarios?\\n- Can special cases be eliminated through better design?\\n- Are edge cases handled through general patterns rather than one-offs?\\n\\n**Consistency & Reusability:**\\n- Does this follow existing architectural patterns in the codebase?\\n- Are there similar problems already solved differently elsewhere?\\n- Could this functionality be generalized to handle more cases?\\n- Does it duplicate existing functionality that could be extended?\\n\\n**Design Patterns & Structure:**\\n- Are design patterns used appropriately (not forced)?\\n- Is the separation of concerns clear and logical?\\n- Are dependencies and coupling minimized?\\n- Is the code organized in a way that makes sense?\\n\\n**Scalability & Extensibility:**\\n- Will this design scale with future requirements?\\n- Is it easy to extend without major refactoring?\\n- Are boundaries and interfaces well-defined?\\n\\nFlag issues where simpler solutions exist, special cases are introduced unnecessarily, or existing functionality could be reused.\\n\\n## Severity Guidelines\\nUse the following severity levels appropriately:\\n- **critical**: Architectural decisions that will cause system failures or major technical debt (circular dependencies, tight coupling causing deadlocks)\\n- **error**: Significant architectural problems (over-engineering, unnecessary special cases, violation of core patterns, missed reuse opportunities)\\n- **warning**: Architectural concerns that should be addressed (minor over-abstraction, could be simplified, inconsistent patterns)\\n- **info**: Architectural suggestions and alternative approaches (simpler patterns available, potential for future reuse)\\n\\n  </instructions>\\n\\n  <context>\\n<pull_request>\\n  <!-- Core pull request metadata including identification, branches, and change statistics -->\\n  <metadata>\\n    <number>0</number>\\n    <title>Local Analysis: main (1 modified)</title>\\n    <author>GitHub Action</author>\\n    <base_branch>main</base_branch>\\n    <target_branch>main</target_branch>\\n    <total_additions>2</total_additions>\\n    <total_deletions>2</total_deletions>\\n    <files_changed_count>1</files_changed_count>\\n  </metadata>\\n  <!-- Full pull request description provided by the author -->\\n  <description>\\nAnalysis of local git repository working directory.\\n\\n**Last Commit:** build: update bundled dist files\\n**Author:** GitHub Action <action@github.com>\\n**Date:** 2025-10-22T13:38:20Z\\n\\n**Changes Summary:**\\n- Files to be committed: 0\\n- Modified files: 1\\n- Untracked files: 0\\n\\n  </description>\\n  <!-- Complete unified diff showing all changes in the pull request (processed with outline-diff) -->\\n  <full_diff>\\nProbe version: 0.6.0\\nReading from stdin...\\nFiles to extract:\\n  README.md\\n  a/README.md\\n  b/README.md\\n  site/visor.png\\nFormat: outline-diff\\n\\ndiff --git a/README.md b/README.md\\nindex 00000000..11111111 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,694 +1,694 @@ div align=\\\"center\\\">\\n1  div align=\\\"center\\\">\\n2    <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n3    \\n4    # Visor — Open‑source SDLC automation & code review orchestration\\n5    \\n6    [![TypeScript](https://img.shields.io/badge/TypeScript-5.0%2B-blue)](https://www.typescriptlang.org/)\\n7    [![Node](https://img.shields.io/badge/Node.js-18%2B-green)](https://nodejs.org/)\\n\\n\\nEncountered 3 errors\\n\\nToken Usage:\\n  Request tokens: 76.5\\n  Response tokens: 0\\n  Total tokens: 0\\n\\n  </full_diff>\\n  <!-- Summary of all files changed with statistics -->\\n  <files_summary>\\n    <file>\\n      <filename>README.md</filename>\\n      <status>modified</status>\\n      <additions>2</additions>\\n      <deletions>2</deletions>\\n    </file>\\n  </files_summary>\\n</pull_request>\\n  </context>\\n\\n  <rules>\\n    <rule>Only analyze code that appears with + (additions) or - (deletions) in the diff sections</rule>\\n    <rule>Ignore unchanged code unless directly relevant to understanding a change</rule>\\n    <rule>Line numbers in your response should match actual file line numbers from the diff</rule>\\n    <rule>Focus on real issues, not nitpicks or cosmetic concerns</rule>\\n    <rule>Provide actionable, specific feedback with clear remediation steps</rule>\\n    <rule>For INCREMENTAL analysis, ONLY review changes in commit_diff section</rule>\\n    <rule>For FULL analysis, review all changes in full_diff section</rule>\\n    <rule>Reference specific XML elements like files_summary, metadata when providing context</rule>\\n    <rule>STRICT OUTPUT POLICY: Report only actual problems, risks, or deficiencies. Do not write praise, congratulations, or celebratory text. Do not create issues that merely restate improvements or say \\\"no action needed\\\".</rule>\\n    <rule>SEVERITY ASSIGNMENT: Assign severity ONLY to problems introduced or left unresolved by this change (critical/error/warning/info as appropriate). Do NOT create issue entries solely to acknowledge improvements; if no problems exist, return zero issues.</rule>\\n  </rules>\\n</review_request>\",\"rawResponse\":\"{\\n  \\\"issues\\\": []\\n}\",\"provider\":\"google\",\"model\":\"default\",\"apiKeySource\":\"GOOGLE_API_KEY\",\"processingTime\":38401,\"promptLength\":5849,\"responseLength\":18,\"errors\":[],\"jsonParseSuccess\":true,\"timestamp\":\"2025-10-22T13:52:22.905Z\",\"schemaName\":\"code-review\",\"schema\":\"{\\n  \\\"schema\\\": \\\"{\\\\n  \\\\\\\"$schema\\\\\\\": \\\\\\\"http://json-schema.org/draft-07/schema#\\\\\\\",\\\\n  \\\\\\\"$id\\\\\\\": \\\\\\\"code-review\\\\\\\",\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"Code Review\\\\\\\",\\\\n  \\\\\\\"description\\\\\\\": \\\\\\\"Structured format for code review issues. CRITICAL: Return ONLY a valid JSON object matching this schema. Do NOT include prose, explanations, markdown, or XML tags. Start your response with { and end with }.\\\\\\\",\\\\n  \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n  \\\\\\\"required\\\\\\\": [\\\\\\\"issues\\\\\\\"],\\\\n  \\\\\\\"properties\\\\\\\": {\\\\n    \\\\\\\"issues\\\\\\\": {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"array\\\\\\\",\\\\n      \\\\\\\"description\\\\\\\": \\\\\\\"List of issues found during code review\\\\\\\",\\\\n      \\\\\\\"items\\\\\\\": {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n        \\\\\\\"required\\\\\\\": [\\\\\\\"file\\\\\\\", \\\\\\\"line\\\\\\\", \\\\\\\"ruleId\\\\\\\", \\\\\\\"message\\\\\\\", \\\\\\\"severity\\\\\\\"],\\\\n        \\\\\\\"properties\\\\\\\": {\\\\n          \\\\\\\"file\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"File path relative to repository root\\\\\\\"\\\\n          },\\\\n          \\\\\\\"line\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"integer\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Line number where issue starts\\\\\\\",\\\\n            \\\\\\\"minimum\\\\\\\": 1\\\\n          },\\\\n          \\\\\\\"endLine\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"integer\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Line number where issue ends\\\\\\\",\\\\n            \\\\\\\"minimum\\\\\\\": 1\\\\n          },\\\\n          \\\\\\\"ruleId\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Rule identifier (e.g., 'security/sql-injection')\\\\\\\",\\\\n            \\\\\\\"pattern\\\\\\\": \\\\\\\"^[a-z-]+/[a-z-]+$\\\\\\\"\\\\n          },\\\\n          \\\\\\\"message\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Clear description of the issue\\\\\\\"\\\\n          },\\\\n          \\\\\\\"severity\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"enum\\\\\\\": [\\\\\\\"warning\\\\\\\", \\\\\\\"error\\\\\\\", \\\\\\\"critical\\\\\\\"],\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Issue severity level based on the NEW CODE being introduced: warning (should fix), error (must fix), critical (NEW security vulnerabilities, data loss risks, or breaking changes that block deployment). IMPORTANT: Use 'critical' ONLY when NEW problematic code is INTRODUCED, NOT when existing issues are being FIXED. CRITICAL: Your entire response must be a single valid JSON object matching this schema - do not include any prose, explanations, markdown, or XML tags outside the JSON.\\\\\\\"\\\\n          },\\\\n          \\\\\\\"category\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Issue category\\\\\\\",\\\\n            \\\\\\\"enum\\\\\\\": [\\\\\\\"security\\\\\\\", \\\\\\\"performance\\\\\\\", \\\\\\\"style\\\\\\\", \\\\\\\"logic\\\\\\\", \\\\\\\"documentation\\\\\\\", \\\\\\\"architecture\\\\\\\"]\\\\n          },\\\\n          \\\\\\\"suggestion\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"How to fix the issue\\\\\\\"\\\\n          },\\\\n          \\\\\\\"replacement\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Code to replace the problematic lines\\\\\\\"\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\"\\n}\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[],\"debug\":{\"prompt\":\"<review_request>\\n  <analysis_type>FULL</analysis_type>\\n\\n  <analysis_focus>\\n    You are analyzing the COMPLETE PR. Review all changes in the full_diff section.\\n  </analysis_focus>\\n\\n  <instructions>\\nBased on our overview discussion, please perform a comprehensive security analysis of the code changes.\\n\\nAnalyze the files listed in the `<files_summary>` section and focus on the code changes shown in the diff sections.\\n\\n## Security Analysis Areas\\n\\n**Input Validation & Injection:**\\n- SQL injection in database queries\\n- XSS vulnerabilities in user input handling\\n- Command injection in system calls\\n- Path traversal in file operations\\n\\n**Authentication & Authorization:**\\n- Weak authentication mechanisms\\n- Session management flaws\\n- Access control bypasses\\n- Privilege escalation opportunities\\n\\n**Data Protection:**\\n- Sensitive data exposure in logs/errors\\n- Unencrypted data storage\\n- API key or credential leaks\\n- Privacy regulation compliance\\n\\n**Infrastructure Security:**\\n- Insecure configurations\\n- Missing security headers\\n- Vulnerable dependencies\\n- Resource exhaustion vulnerabilities\\n\\nProvide specific findings with clear explanations and actionable remediation steps.\\n\\n## Severity Guidelines\\nUse the following severity levels appropriately:\\n- **critical**: Security vulnerabilities that could lead to immediate compromise (RCE, SQL injection, authentication bypass, exposed secrets)\\n- **error**: Security issues that must be fixed before production (XSS, path traversal, weak crypto, missing auth checks)\\n- **warning**: Security concerns that should be addressed (verbose errors, missing rate limiting, insecure defaults)\\n- **info**: Security best practices and hardening suggestions (defense in depth, additional validation)\\n\\n  </instructions>\\n\\n  <context>\\n<pull_request>\\n  <!-- Core pull request metadata including identification, branches, and change statistics -->\\n  <metadata>\\n    <number>0</number>\\n    <title>Local Analysis: main (1 modified)</title>\\n    <author>GitHub Action</author>\\n    <base_branch>main</base_branch>\\n    <target_branch>main</target_branch>\\n    <total_additions>2</total_additions>\\n    <total_deletions>2</total_deletions>\\n    <files_changed_count>1</files_changed_count>\\n  </metadata>\\n  <!-- Full pull request description provided by the author -->\\n  <description>\\nAnalysis of local git repository working directory.\\n\\n**Last Commit:** build: update bundled dist files\\n**Author:** GitHub Action <action@github.com>\\n**Date:** 2025-10-22T13:38:20Z\\n\\n**Changes Summary:**\\n- Files to be committed: 0\\n- Modified files: 1\\n- Untracked files: 0\\n\\n  </description>\\n  <!-- Complete unified diff showing all changes in the pull request (processed with outline-diff) -->\\n  <full_diff>\\nProbe version: 0.6.0\\nReading from stdin...\\nFiles to extract:\\n  README.md\\n  a/README.md\\n  b/README.md\\n  site/visor.png\\nFormat: outline-diff\\n\\ndiff --git a/README.md b/README.md\\nindex 00000000..11111111 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -1,694 +1,694 @@ div align=\\\"center\\\">\\n1  div align=\\\"center\\\">\\n2    <img src=\\\"site/visor.png\\\" alt=\\\"Visor Logo\\\" width=\\\"500\\\" />\\n3    \\n4    # Visor — Open‑source SDLC automation & code review orchestration\\n5    \\n6    [![TypeScript](https://img.shields.io/badge/TypeScript-5.0%2B-blue)](https://www.typescriptlang.org/)\\n7    [![Node](https://img.shields.io/badge/Node.js-18%2B-green)](https://nodejs.org/)\\n\\n\\nEncountered 3 errors\\n\\nToken Usage:\\n  Request tokens: 76.5\\n  Response tokens: 0\\n  Total tokens: 0\\n\\n  </full_diff>\\n  <!-- Summary of all files changed with statistics -->\\n  <files_summary>\\n    <file>\\n      <filename>README.md</filename>\\n      <status>modified</status>\\n      <additions>2</additions>\\n      <deletions>2</deletions>\\n    </file>\\n  </files_summary>\\n</pull_request>\\n  </context>\\n\\n  <rules>\\n    <rule>Only analyze code that appears with + (additions) or - (deletions) in the diff sections</rule>\\n    <rule>Ignore unchanged code unless directly relevant to understanding a change</rule>\\n    <rule>Line numbers in your response should match actual file line numbers from the diff</rule>\\n    <rule>Focus on real issues, not nitpicks or cosmetic concerns</rule>\\n    <rule>Provide actionable, specific feedback with clear remediation steps</rule>\\n    <rule>For INCREMENTAL analysis, ONLY review changes in commit_diff section</rule>\\n    <rule>For FULL analysis, review all changes in full_diff section</rule>\\n    <rule>Reference specific XML elements like files_summary, metadata when providing context</rule>\\n    <rule>STRICT OUTPUT POLICY: Report only actual problems, risks, or deficiencies. Do not write praise, congratulations, or celebratory text. Do not create issues that merely restate improvements or say \\\"no action needed\\\".</rule>\\n    <rule>SEVERITY ASSIGNMENT: Assign severity ONLY to problems introduced or left unresolved by this change (critical/error/warning/info as appropriate). Do NOT create issue entries solely to acknowledge improvements; if no problems exist, return zero issues.</rule>\\n  </rules>\\n</review_request>\",\"rawResponse\":\"{\\n  \\\"issues\\\": []\\n}\",\"provider\":\"google\",\"model\":\"default\",\"apiKeySource\":\"GOOGLE_API_KEY\",\"processingTime\":41561,\"promptLength\":4994,\"responseLength\":18,\"errors\":[],\"jsonParseSuccess\":true,\"timestamp\":\"2025-10-22T13:52:22.905Z\",\"schemaName\":\"code-review\",\"schema\":\"{\\n  \\\"schema\\\": \\\"{\\\\n  \\\\\\\"$schema\\\\\\\": \\\\\\\"http://json-schema.org/draft-07/schema#\\\\\\\",\\\\n  \\\\\\\"$id\\\\\\\": \\\\\\\"code-review\\\\\\\",\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"Code Review\\\\\\\",\\\\n  \\\\\\\"description\\\\\\\": \\\\\\\"Structured format for code review issues. CRITICAL: Return ONLY a valid JSON object matching this schema. Do NOT include prose, explanations, markdown, or XML tags. Start your response with { and end with }.\\\\\\\",\\\\n  \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n  \\\\\\\"required\\\\\\\": [\\\\\\\"issues\\\\\\\"],\\\\n  \\\\\\\"properties\\\\\\\": {\\\\n    \\\\\\\"issues\\\\\\\": {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"array\\\\\\\",\\\\n      \\\\\\\"description\\\\\\\": \\\\\\\"List of issues found during code review\\\\\\\",\\\\n      \\\\\\\"items\\\\\\\": {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"object\\\\\\\",\\\\n        \\\\\\\"required\\\\\\\": [\\\\\\\"file\\\\\\\", \\\\\\\"line\\\\\\\", \\\\\\\"ruleId\\\\\\\", \\\\\\\"message\\\\\\\", \\\\\\\"severity\\\\\\\"],\\\\n        \\\\\\\"properties\\\\\\\": {\\\\n          \\\\\\\"file\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"File path relative to repository root\\\\\\\"\\\\n          },\\\\n          \\\\\\\"line\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"integer\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Line number where issue starts\\\\\\\",\\\\n            \\\\\\\"minimum\\\\\\\": 1\\\\n          },\\\\n          \\\\\\\"endLine\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"integer\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Line number where issue ends\\\\\\\",\\\\n            \\\\\\\"minimum\\\\\\\": 1\\\\n          },\\\\n          \\\\\\\"ruleId\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Rule identifier (e.g., 'security/sql-injection')\\\\\\\",\\\\n            \\\\\\\"pattern\\\\\\\": \\\\\\\"^[a-z-]+/[a-z-]+$\\\\\\\"\\\\n          },\\\\n          \\\\\\\"message\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Clear description of the issue\\\\\\\"\\\\n          },\\\\n          \\\\\\\"severity\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"enum\\\\\\\": [\\\\\\\"warning\\\\\\\", \\\\\\\"error\\\\\\\", \\\\\\\"critical\\\\\\\"],\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Issue severity level based on the NEW CODE being introduced: warning (should fix), error (must fix), critical (NEW security vulnerabilities, data loss risks, or breaking changes that block deployment). IMPORTANT: Use 'critical' ONLY when NEW problematic code is INTRODUCED, NOT when existing issues are being FIXED. CRITICAL: Your entire response must be a single valid JSON object matching this schema - do not include any prose, explanations, markdown, or XML tags outside the JSON.\\\\\\\"\\\\n          },\\\\n          \\\\\\\"category\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Issue category\\\\\\\",\\\\n            \\\\\\\"enum\\\\\\\": [\\\\\\\"security\\\\\\\", \\\\\\\"performance\\\\\\\", \\\\\\\"style\\\\\\\", \\\\\\\"logic\\\\\\\", \\\\\\\"documentation\\\\\\\", \\\\\\\"architecture\\\\\\\"]\\\\n          },\\\\n          \\\\\\\"suggestion\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"How to fix the issue\\\\\\\"\\\\n          },\\\\n          \\\\\\\"replacement\\\\\\\": {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"string\\\\\\\",\\\\n            \\\\\\\"description\\\\\\\": \\\\\\\"Code to replace the problematic lines\\\\\\\"\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\"\\n}\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}}]}
