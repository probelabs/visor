{"name":"visor.run","attributes":{"started":true}}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"apply-overview-labels","visor.provider.type":"github"}}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.output":"{\"text\":\"### PR Overview\\n\\nThis pull request is titled \\\"feat: add user search\\\" and is intended to add a new file `src/search.ts`. \\n\\nHowever, the pull request appears to be empty. The file summary indicates the addition of `src/search.ts` with 3 lines of code, but the diff is empty and the file does not exist in the source tree. \\n\\n**Conclusion:** A code review cannot be performed. Please verify that the branch contains the intended changes and that they have been pushed correctly to the pull request.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"### PR Overview\\n\\nThis pull request is titled \\\"feat: add user search\\\" and is intended to add a new file `src/search.ts`. \\n\\nHowever, the pull request appears to be empty. The file summary indicates the addition of `src/search.ts` with 3 lines of code, but the diff is empty and the file does not exist in the source tree. \\n\\n**Conclusion:** A code review cannot be performed. Please verify that the branch contains the intended changes and that they have been pushed correctly to the pull request.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"### PR Overview\\n\\nThis pull request is titled \\\"feat: add user search\\\" and is intended to add a new file `src/search.ts`. \\n\\nHowever, the pull request appears to be empty. The file summary indicates the addition of `src/search.ts` with 3 lines of code, but the diff is empty and the file does not exist in the source tree. \\n\\n**Conclusion:** A code review cannot be performed. Please verify that the branch contains the intended changes and that they have been pushed correctly to the pull request.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"### PR Overview\\n\\nThis pull request is titled \\\"feat: add user search\\\" and is intended to add a new file `src/search.ts`. \\n\\nHowever, the pull request appears to be empty. The file summary indicates the addition of `src/search.ts` with 3 lines of code, but the diff is empty and the file does not exist in the source tree. \\n\\n**Conclusion:** A code review cannot be performed. Please verify that the branch contains the intended changes and that they have been pushed correctly to the pull request.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"### PR Overview\\n\\nThis pull request is titled \\\"feat: add user search\\\" and is intended to add a new file `src/search.ts`. \\n\\nHowever, the pull request appears to be empty. The file summary indicates the addition of `src/search.ts` with 3 lines of code, but the diff is empty and the file does not exist in the source tree. \\n\\n**Conclusion:** A code review cannot be performed. Please verify that the branch contains the intended changes and that they have been pushed correctly to the pull request.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"apply-overview-labels","visor.provider.type":"github"}}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[{\"file\":\"src/search.ts\",\"line\":1,\"ruleId\":\"review/missing-code\",\"message\":\"Unable to perform review because the code for this file was not provided. The pull request diff is empty, and an attempt to read the file failed.\",\"severity\":\"error\",\"category\":\"architecture\",\"suggestion\":\"Please verify the pull request data and ensure the full code diff is included in the review request.\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"check","name":"performance_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"check","name":"performance_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"check","name":"performance_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"check","name":"performance_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"check","name":"performance_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"comment-assistant","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.output":"{\"text\":\"You're welcome! Let us know if you have any other questions.\\n\\nReferences:\\n```refs\\nnone\\n```\",\"intent\":\"comment_reply\"}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"comment-assistant","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"comment-assistant","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.output":"{\"text\":\"Hello! I'm Visor, your AI code review assistant. Here are the commands I understand:\\n\\n*   `/review`: Reruns all configured checks on the pull request.\\n*   `/review --check <check_name>`: Runs only a specific check. For example: `/review --check security`.\\n*   `/review --help`: Shows this help message.\\n*   `/visor <question>`: Asks me a question about the code. For example: `/visor what is the purpose of this file?`.\\n\\nLet me know if you have any other questions!\",\"intent\":\"comment_reply\",\"references\":[{\"path\":\"docs/commands.md\",\"note\":\"List of available PR comment commands\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"comment-assistant","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"comment-assistant","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.output":"{\"text\":\"Acknowledged. I will regenerate the reviews.\\n\\nReferences:\\n```refs\\nnone\\n```\",\"intent\":\"comment_retrigger\"}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.output":"{\"text\":\"I am ready to help with the code review and generate a PR overview. However, the code diff or a summary of the changed files was not provided in the request. To proceed, please provide the diff of the changes you would like me to review.\"}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{\"overview\":{\"text\":\"I am ready to help with the code review and generate a PR overview. However, the code diff or a summary of the changed files was not provided in the request. To proceed, please provide the diff of the changes you would like me to review.\"},\"overview-raw\":{\"text\":\"I am ready to help with the code review and generate a PR overview. However, the code diff or a summary of the changed files was not provided in the request. To proceed, please provide the diff of the changes you would like me to review.\"}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[{\"file\":\"src/providers/command-check-provider.ts\",\"line\":79,\"ruleId\":\"security/command-injection\",\"message\":\"The `exec` command from the configuration is rendered using a Liquid template with potentially user-controllable data (e.g., PR title, author). The rendered command is then executed using `child_process.exec`, which allows an attacker to inject arbitrary shell commands.\",\"severity\":\"critical\",\"category\":\"security\",\"suggestion\":\"Replace `child_process.exec` with `child_process.spawn`. The command and its arguments should be passed as an array to `spawn`, which prevents shell interpretation of the arguments. If using `exec` is unavoidable, all user-controllable variables passed to the template must be strictly sanitized to prevent shell injection.\"},{\"file\":\"src/webhook-server.ts\",\"line\":270,\"ruleId\":\"security/timing-attack\",\"message\":\"The `authenticateRequest` function in `WebhookServer` uses non-constant-time string comparisons for bearer tokens and basic authentication credentials. This makes the authentication mechanism vulnerable to timing attacks, where an attacker could potentially guess the secret by measuring the time it takes for the server to respond.\",\"severity\":\"error\",\"category\":\"security\",\"suggestion\":\"Use a timing-safe comparison function, like `crypto.timingSafeEqual`, for all secret comparisons. The HMAC authentication already uses this correctly, and the same should be applied to bearer token and basic authentication.\"},{\"file\":\"src/webhook-server.ts\",\"line\":257,\"ruleId\":\"security/insecure-default\",\"message\":\"The `authenticateRequest` function allows authentication to be disabled if the configuration is missing or explicitly set to `none`. While this is a configurable option, it's an insecure default.\",\"severity\":\"warning\",\"category\":\"security\",\"suggestion\":\"Consider changing the default behavior to be secure by default. If no authentication is configured, the server should reject all requests. Authentication should be explicitly disabled if that is the intended behavior.\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{\"overview\":{\"text\":\"I am ready to help with the code review and generate a PR overview. However, the code diff or a summary of the changed files was not provided in the request. To proceed, please provide the diff of the changes you would like me to review.\"},\"overview-raw\":{\"text\":\"I am ready to help with the code review and generate a PR overview. However, the code diff or a summary of the changed files was not provided in the request. To proceed, please provide the diff of the changes you would like me to review.\"},\"security\":{\"issues\":[{\"file\":\"src/providers/command-check-provider.ts\",\"line\":79,\"ruleId\":\"security/security/command-injection\",\"message\":\"The `exec` command from the configuration is rendered using a Liquid template with potentially user-controllable data (e.g., PR title, author). The rendered command is then executed using `child_process.exec`, which allows an attacker to inject arbitrary shell commands.\",\"severity\":\"critical\",\"category\":\"security\",\"suggestion\":\"Replace `child_process.exec` with `child_process.spawn`. The command and its arguments should be passed as an array to `spawn`, which prevents shell interpretation of the arguments. If using `exec` is unavoidable, all user-controllable variables passed to the template must be strictly sanitized to prevent shell injection.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":270,\"ruleId\":\"security/security/timing-attack\",\"message\":\"The `authenticateRequest` function in `WebhookServer` uses non-constant-time string comparisons for bearer tokens and basic authentication credentials. This makes the authentication mechanism vulnerable to timing attacks, where an attacker could potentially guess the secret by measuring the time it takes for the server to respond.\",\"severity\":\"error\",\"category\":\"security\",\"suggestion\":\"Use a timing-safe comparison function, like `crypto.timingSafeEqual`, for all secret comparisons. The HMAC authentication already uses this correctly, and the same should be applied to bearer token and basic authentication.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":257,\"ruleId\":\"security/security/insecure-default\",\"message\":\"The `authenticateRequest` function allows authentication to be disabled if the configuration is missing or explicitly set to `none`. While this is a configurable option, it's an insecure default.\",\"severity\":\"warning\",\"category\":\"security\",\"suggestion\":\"Consider changing the default behavior to be secure by default. If no authentication is configured, the server should reject all requests. Authentication should be explicitly disabled if that is the intended behavior.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840}]},\"security-raw\":{\"issues\":[{\"file\":\"src/providers/command-check-provider.ts\",\"line\":79,\"ruleId\":\"security/security/command-injection\",\"message\":\"The `exec` command from the configuration is rendered using a Liquid template with potentially user-controllable data (e.g., PR title, author). The rendered command is then executed using `child_process.exec`, which allows an attacker to inject arbitrary shell commands.\",\"severity\":\"critical\",\"category\":\"security\",\"suggestion\":\"Replace `child_process.exec` with `child_process.spawn`. The command and its arguments should be passed as an array to `spawn`, which prevents shell interpretation of the arguments. If using `exec` is unavoidable, all user-controllable variables passed to the template must be strictly sanitized to prevent shell injection.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":270,\"ruleId\":\"security/security/timing-attack\",\"message\":\"The `authenticateRequest` function in `WebhookServer` uses non-constant-time string comparisons for bearer tokens and basic authentication credentials. This makes the authentication mechanism vulnerable to timing attacks, where an attacker could potentially guess the secret by measuring the time it takes for the server to respond.\",\"severity\":\"error\",\"category\":\"security\",\"suggestion\":\"Use a timing-safe comparison function, like `crypto.timingSafeEqual`, for all secret comparisons. The HMAC authentication already uses this correctly, and the same should be applied to bearer token and basic authentication.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":257,\"ruleId\":\"security/security/insecure-default\",\"message\":\"The `authenticateRequest` function allows authentication to be disabled if the configuration is missing or explicitly set to `none`. While this is a configurable option, it's an insecure default.\",\"severity\":\"warning\",\"category\":\"security\",\"suggestion\":\"Consider changing the default behavior to be secure by default. If no authentication is configured, the server should reject all requests. Authentication should be explicitly disabled if that is the intended behavior.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840}]}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"input/missing-code\",\"message\":\"Cannot perform the code review because no code was provided. The `<full_diff>` or `<commit_diff>` section is missing from the request.\",\"severity\":\"error\",\"category\":\"architecture\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{\"overview\":{\"text\":\"I am ready to help with the code review and generate a PR overview. However, the code diff or a summary of the changed files was not provided in the request. To proceed, please provide the diff of the changes you would like me to review.\"},\"overview-raw\":{\"text\":\"I am ready to help with the code review and generate a PR overview. However, the code diff or a summary of the changed files was not provided in the request. To proceed, please provide the diff of the changes you would like me to review.\"},\"security\":{\"issues\":[{\"file\":\"src/providers/command-check-provider.ts\",\"line\":79,\"ruleId\":\"security/security/command-injection\",\"message\":\"The `exec` command from the configuration is rendered using a Liquid template with potentially user-controllable data (e.g., PR title, author). The rendered command is then executed using `child_process.exec`, which allows an attacker to inject arbitrary shell commands.\",\"severity\":\"critical\",\"category\":\"security\",\"suggestion\":\"Replace `child_process.exec` with `child_process.spawn`. The command and its arguments should be passed as an array to `spawn`, which prevents shell interpretation of the arguments. If using `exec` is unavoidable, all user-controllable variables passed to the template must be strictly sanitized to prevent shell injection.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":270,\"ruleId\":\"security/security/timing-attack\",\"message\":\"The `authenticateRequest` function in `WebhookServer` uses non-constant-time string comparisons for bearer tokens and basic authentication credentials. This makes the authentication mechanism vulnerable to timing attacks, where an attacker could potentially guess the secret by measuring the time it takes for the server to respond.\",\"severity\":\"error\",\"category\":\"security\",\"suggestion\":\"Use a timing-safe comparison function, like `crypto.timingSafeEqual`, for all secret comparisons. The HMAC authentication already uses this correctly, and the same should be applied to bearer token and basic authentication.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":257,\"ruleId\":\"security/security/insecure-default\",\"message\":\"The `authenticateRequest` function allows authentication to be disabled if the configuration is missing or explicitly set to `none`. While this is a configurable option, it's an insecure default.\",\"severity\":\"warning\",\"category\":\"security\",\"suggestion\":\"Consider changing the default behavior to be secure by default. If no authentication is configured, the server should reject all requests. Authentication should be explicitly disabled if that is the intended behavior.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840}]},\"security-raw\":{\"issues\":[{\"file\":\"src/providers/command-check-provider.ts\",\"line\":79,\"ruleId\":\"security/security/command-injection\",\"message\":\"The `exec` command from the configuration is rendered using a Liquid template with potentially user-controllable data (e.g., PR title, author). The rendered command is then executed using `child_process.exec`, which allows an attacker to inject arbitrary shell commands.\",\"severity\":\"critical\",\"category\":\"security\",\"suggestion\":\"Replace `child_process.exec` with `child_process.spawn`. The command and its arguments should be passed as an array to `spawn`, which prevents shell interpretation of the arguments. If using `exec` is unavoidable, all user-controllable variables passed to the template must be strictly sanitized to prevent shell injection.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":270,\"ruleId\":\"security/security/timing-attack\",\"message\":\"The `authenticateRequest` function in `WebhookServer` uses non-constant-time string comparisons for bearer tokens and basic authentication credentials. This makes the authentication mechanism vulnerable to timing attacks, where an attacker could potentially guess the secret by measuring the time it takes for the server to respond.\",\"severity\":\"error\",\"category\":\"security\",\"suggestion\":\"Use a timing-safe comparison function, like `crypto.timingSafeEqual`, for all secret comparisons. The HMAC authentication already uses this correctly, and the same should be applied to bearer token and basic authentication.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":257,\"ruleId\":\"security/security/insecure-default\",\"message\":\"The `authenticateRequest` function allows authentication to be disabled if the configuration is missing or explicitly set to `none`. While this is a configurable option, it's an insecure default.\",\"severity\":\"warning\",\"category\":\"security\",\"suggestion\":\"Consider changing the default behavior to be secure by default. If no authentication is configured, the server should reject all requests. Authentication should be explicitly disabled if that is the intended behavior.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840}]},\"architecture\":{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"architecture/input/missing-code\",\"message\":\"Cannot perform the code review because no code was provided. The `<full_diff>` or `<commit_diff>` section is missing from the request.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"architecture\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638646540}]},\"architecture-raw\":{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"architecture/input/missing-code\",\"message\":\"Cannot perform the code review because no code was provided. The `<full_diff>` or `<commit_diff>` section is missing from the request.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"architecture\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638646540}]}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the performance review, but the code changes to be reviewed were not provided in your request. To proceed, please provide the `full_diff` or `commit_diff` of the changes you would like me to analyze. I will then be able to assess the performance implications of the modifications.\",\"severity\":\"info\",\"category\":\"documentation\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{\"overview\":{\"text\":\"I am ready to help with the code review and generate a PR overview. However, the code diff or a summary of the changed files was not provided in the request. To proceed, please provide the diff of the changes you would like me to review.\"},\"overview-raw\":{\"text\":\"I am ready to help with the code review and generate a PR overview. However, the code diff or a summary of the changed files was not provided in the request. To proceed, please provide the diff of the changes you would like me to review.\"},\"security\":{\"issues\":[{\"file\":\"src/providers/command-check-provider.ts\",\"line\":79,\"ruleId\":\"security/security/command-injection\",\"message\":\"The `exec` command from the configuration is rendered using a Liquid template with potentially user-controllable data (e.g., PR title, author). The rendered command is then executed using `child_process.exec`, which allows an attacker to inject arbitrary shell commands.\",\"severity\":\"critical\",\"category\":\"security\",\"suggestion\":\"Replace `child_process.exec` with `child_process.spawn`. The command and its arguments should be passed as an array to `spawn`, which prevents shell interpretation of the arguments. If using `exec` is unavoidable, all user-controllable variables passed to the template must be strictly sanitized to prevent shell injection.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":270,\"ruleId\":\"security/security/timing-attack\",\"message\":\"The `authenticateRequest` function in `WebhookServer` uses non-constant-time string comparisons for bearer tokens and basic authentication credentials. This makes the authentication mechanism vulnerable to timing attacks, where an attacker could potentially guess the secret by measuring the time it takes for the server to respond.\",\"severity\":\"error\",\"category\":\"security\",\"suggestion\":\"Use a timing-safe comparison function, like `crypto.timingSafeEqual`, for all secret comparisons. The HMAC authentication already uses this correctly, and the same should be applied to bearer token and basic authentication.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":257,\"ruleId\":\"security/security/insecure-default\",\"message\":\"The `authenticateRequest` function allows authentication to be disabled if the configuration is missing or explicitly set to `none`. While this is a configurable option, it's an insecure default.\",\"severity\":\"warning\",\"category\":\"security\",\"suggestion\":\"Consider changing the default behavior to be secure by default. If no authentication is configured, the server should reject all requests. Authentication should be explicitly disabled if that is the intended behavior.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840}]},\"security-raw\":{\"issues\":[{\"file\":\"src/providers/command-check-provider.ts\",\"line\":79,\"ruleId\":\"security/security/command-injection\",\"message\":\"The `exec` command from the configuration is rendered using a Liquid template with potentially user-controllable data (e.g., PR title, author). The rendered command is then executed using `child_process.exec`, which allows an attacker to inject arbitrary shell commands.\",\"severity\":\"critical\",\"category\":\"security\",\"suggestion\":\"Replace `child_process.exec` with `child_process.spawn`. The command and its arguments should be passed as an array to `spawn`, which prevents shell interpretation of the arguments. If using `exec` is unavoidable, all user-controllable variables passed to the template must be strictly sanitized to prevent shell injection.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":270,\"ruleId\":\"security/security/timing-attack\",\"message\":\"The `authenticateRequest` function in `WebhookServer` uses non-constant-time string comparisons for bearer tokens and basic authentication credentials. This makes the authentication mechanism vulnerable to timing attacks, where an attacker could potentially guess the secret by measuring the time it takes for the server to respond.\",\"severity\":\"error\",\"category\":\"security\",\"suggestion\":\"Use a timing-safe comparison function, like `crypto.timingSafeEqual`, for all secret comparisons. The HMAC authentication already uses this correctly, and the same should be applied to bearer token and basic authentication.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840},{\"file\":\"src/webhook-server.ts\",\"line\":257,\"ruleId\":\"security/security/insecure-default\",\"message\":\"The `authenticateRequest` function allows authentication to be disabled if the configuration is missing or explicitly set to `none`. While this is a configurable option, it's an insecure default.\",\"severity\":\"warning\",\"category\":\"security\",\"suggestion\":\"Consider changing the default behavior to be secure by default. If no authentication is configured, the server should reject all requests. Authentication should be explicitly disabled if that is the intended behavior.\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638617840}]},\"architecture\":{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"architecture/input/missing-code\",\"message\":\"Cannot perform the code review because no code was provided. The `<full_diff>` or `<commit_diff>` section is missing from the request.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"architecture\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638646540}]},\"architecture-raw\":{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"architecture/input/missing-code\",\"message\":\"Cannot perform the code review because no code was provided. The `<full_diff>` or `<commit_diff>` section is missing from the request.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"architecture\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638646540}]},\"performance\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"performance/ai/raw_response\",\"message\":\"I am ready to start the performance review, but the code changes to be reviewed were not provided in your request. To proceed, please provide the `full_diff` or `commit_diff` of the changes you would like me to analyze. I will then be able to assess the performance implications of the modifications.\",\"severity\":\"info\",\"category\":\"documentation\",\"checkName\":\"performance\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638684044}]},\"performance-raw\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"performance/ai/raw_response\",\"message\":\"I am ready to start the performance review, but the code changes to be reviewed were not provided in your request. To proceed, please provide the `full_diff` or `commit_diff` of the changes you would like me to analyze. I will then be able to assess the performance implications of the modifications.\",\"severity\":\"info\",\"category\":\"documentation\",\"checkName\":\"performance\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638684044}]}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[{\"file\":\"N/A\",\"line\":1,\"ruleId\":\"review/missing-code\",\"message\":\"Cannot perform code review because no code diff was provided in the request. Please provide the code changes within `<full_diff>` or `<commit_diff>` tags.\",\"severity\":\"error\",\"category\":\"architecture\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"comment-assistant","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"comment-assistant","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.output":"{\"text\":\"You're welcome! Let me know if you have any questions.\\n\\nReferences:\\n```refs\\nnone\\n```\",\"intent\":\"comment_reply\"}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"comment-assistant","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"unknown","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search (update)\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":1,\"deletions\":0,\"changes\":1,\"status\":\"modified\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return [q] // updated\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"unknown","visor.check.output":"{\"text\":\"## PR Overview Generation Failed\\n\\nI am unable to provide a detailed analysis for this pull request due to inconsistent and missing information.\\n\\n- The PR summary indicates a modification to `src/search.ts`.\\n- However, the provided diff is empty.\\n- An attempt to read the file `src/search.ts` failed because the file does not exist in the repository view.\\n\\nWithout access to the actual code changes, it is impossible to assess the impact or purpose of this PR. Please verify the PR's contents and trigger the analysis again.\"}"},"events":[]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"Overview text\",\"tags\":{\"label\":\"bug\",\"review-effort\":3}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"security","scope":"check","name":"security_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"check","name":"security_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"security","scope":"check","name":"security_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"check","name":"security_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"security","scope":"check","name":"security_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"unknown","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"unknown","visor.check.output":"{\"text\":\"This PR is intended to add a new user search feature, but it appears to be empty or the changes were not correctly pushed.\\n\\n### Files Changed Analysis\\n- The pull request metadata indicates that a new file, `src/search.ts`, was added with 3 lines.\\n- However, the diff is empty, and the file `src/search.ts` does not exist in the source directory, indicating a discrepancy in the commit.\\n\\n### Architecture & Impact Assessment\\n- **Accomplishment**: There are no functional changes in this PR.\\n- **Technical Changes**: No technical changes have been introduced.\\n- **Affected Components**: No system components are affected.\\n\\n### Scope Discovery & Context Expansion\\n- As the PR is empty, it's not possible to determine the scope or context. The title suggests a new search feature was intended.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}"},"events":[]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"comment-assistant","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"comment-assistant","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"comment-assistant","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.output":"{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\",\"severity\":\"info\",\"category\":\"documentation\"}],\"text\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\"}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{\"overview\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\",\"severity\":\"info\",\"category\":\"documentation\"}],\"text\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\"},\"overview-raw\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\",\"severity\":\"info\",\"category\":\"documentation\"}],\"text\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\"}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[{\"file\":\"N/A\",\"line\":1,\"ruleId\":\"review/missing-input\",\"message\":\"Code to be reviewed is missing. Please provide the file diffs to proceed with the security analysis.\",\"severity\":\"error\",\"category\":\"architecture\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{\"overview\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\",\"severity\":\"info\",\"category\":\"documentation\"}],\"text\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\"},\"overview-raw\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\",\"severity\":\"info\",\"category\":\"documentation\"}],\"text\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\"},\"security\":{\"issues\":[{\"file\":\"N/A\",\"line\":1,\"ruleId\":\"security/review/missing-input\",\"message\":\"Code to be reviewed is missing. Please provide the file diffs to proceed with the security analysis.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638868365}]},\"security-raw\":{\"issues\":[{\"file\":\"N/A\",\"line\":1,\"ruleId\":\"security/review/missing-input\",\"message\":\"Code to be reviewed is missing. Please provide the file diffs to proceed with the security analysis.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638868365}]}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"input/missing-code\",\"message\":\"Cannot perform architectural review because the code to be reviewed is missing. Please provide the code changes in a `<full_diff>` or `<commit_diff>` section in the request.\",\"severity\":\"error\",\"category\":\"architecture\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{\"overview\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\",\"severity\":\"info\",\"category\":\"documentation\"}],\"text\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\"},\"overview-raw\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\",\"severity\":\"info\",\"category\":\"documentation\"}],\"text\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\"},\"security\":{\"issues\":[{\"file\":\"N/A\",\"line\":1,\"ruleId\":\"security/review/missing-input\",\"message\":\"Code to be reviewed is missing. Please provide the file diffs to proceed with the security analysis.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638868365}]},\"security-raw\":{\"issues\":[{\"file\":\"N/A\",\"line\":1,\"ruleId\":\"security/review/missing-input\",\"message\":\"Code to be reviewed is missing. Please provide the file diffs to proceed with the security analysis.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638868365}]},\"architecture\":{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"architecture/input/missing-code\",\"message\":\"Cannot perform architectural review because the code to be reviewed is missing. Please provide the code changes in a `<full_diff>` or `<commit_diff>` section in the request.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"architecture\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638933587}]},\"architecture-raw\":{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"architecture/input/missing-code\",\"message\":\"Cannot perform architectural review because the code to be reviewed is missing. Please provide the code changes in a `<full_diff>` or `<commit_diff>` section in the request.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"architecture\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638933587}]}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the performance review, but I need the code changes to analyze. The `<full_diff>` or `<commit_diff>` section was missing in your request. Please provide the diff of the code you want me to review.\\n\\nOnce you provide the code changes, I will analyze them for:\\n- Algorithm & Data Structure Efficiency\\n- Database Performance\\n- Resource Management\\n- Async & Concurrency issues\\n\\nAnd I will provide feedback with severity levels as requested.\",\"severity\":\"info\",\"category\":\"documentation\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"Sample issue title\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[],\"outputs\":{\"overview\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\",\"severity\":\"info\",\"category\":\"documentation\"}],\"text\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\"},\"overview-raw\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\",\"severity\":\"info\",\"category\":\"documentation\"}],\"text\":\"I am ready to start the code review, but I have not been provided with the diff of the changes. To proceed with the analysis and provide a helpful PR overview, please provide the diff or a summary of the file changes. Once I have the code, I will be able to analyze it according to your instructions.\"},\"security\":{\"issues\":[{\"file\":\"N/A\",\"line\":1,\"ruleId\":\"security/review/missing-input\",\"message\":\"Code to be reviewed is missing. Please provide the file diffs to proceed with the security analysis.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638868365}]},\"security-raw\":{\"issues\":[{\"file\":\"N/A\",\"line\":1,\"ruleId\":\"security/review/missing-input\",\"message\":\"Code to be reviewed is missing. Please provide the file diffs to proceed with the security analysis.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"security\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638868365}]},\"architecture\":{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"architecture/input/missing-code\",\"message\":\"Cannot perform architectural review because the code to be reviewed is missing. Please provide the code changes in a `<full_diff>` or `<commit_diff>` section in the request.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"architecture\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638933587}]},\"architecture-raw\":{\"issues\":[{\"file\":\"review_request\",\"line\":1,\"ruleId\":\"architecture/input/missing-code\",\"message\":\"Cannot perform architectural review because the code to be reviewed is missing. Please provide the code changes in a `<full_diff>` or `<commit_diff>` section in the request.\",\"severity\":\"error\",\"category\":\"architecture\",\"checkName\":\"architecture\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638933587}]},\"performance\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"performance/ai/raw_response\",\"message\":\"I am ready to start the performance review, but I need the code changes to analyze. The `<full_diff>` or `<commit_diff>` section was missing in your request. Please provide the diff of the code you want me to review.\\n\\nOnce you provide the code changes, I will analyze them for:\\n- Algorithm & Data Structure Efficiency\\n- Database Performance\\n- Resource Management\\n- Async & Concurrency issues\\n\\nAnd I will provide feedback with severity levels as requested.\",\"severity\":\"info\",\"category\":\"documentation\",\"checkName\":\"performance\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638969123}]},\"performance-raw\":{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"performance/ai/raw_response\",\"message\":\"I am ready to start the performance review, but I need the code changes to analyze. The `<full_diff>` or `<commit_diff>` section was missing in your request. Please provide the diff of the code you want me to review.\\n\\nOnce you provide the code changes, I will analyze them for:\\n- Algorithm & Data Structure Efficiency\\n- Database Performance\\n- Resource Management\\n- Async & Concurrency issues\\n\\nAnd I will provide feedback with severity levels as requested.\",\"severity\":\"info\",\"category\":\"documentation\",\"checkName\":\"performance\",\"group\":\"review\",\"schema\":\"code-review\",\"timestamp\":1761638969123}]}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[{\"file\":\"AI_RESPONSE\",\"line\":1,\"ruleId\":\"ai/raw_response\",\"message\":\"I am ready to start the code review. However, to proceed, I need the code changes you want me to review. Please provide the diff within `<full_diff>` or `<commit_diff>` tags.\\n\\nOnce you provide the diff, I will analyze it according to your instructions, focusing on:\\n- Code Structure & Design\\n- Error Handling & Reliability\\n- Testing & Test Coverage (including checks for magic numbers, test integrity, and negative testing)\\n- Maintainability\\n- Language-Specific Best Practices\\n\\nI will then provide actionable feedback to help improve the code quality.\",\"severity\":\"info\",\"category\":\"documentation\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"comment-assistant","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"comment-assistant","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"comment-assistant"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.output":"{\"text\":\"This PR introduces user search functionality by adding a new `src/search.ts` file. However, the pull request appears to be empty or incomplete, as there are no code changes in the provided diff, and the new file could not be read.\\n\\n## Files Changed Analysis\\n- **`src/search.ts`**: A new file was added, presumably to contain the user search logic. The file summary indicates 3 additions, but the content is not available, and the overall diff is empty.\\n\\n## Architecture & Impact Assessment\\n### What this PR accomplishes\\nBased on the title, this PR aims to add a user search feature to the application.\\n\\n### Key technical changes introduced\\nNo technical changes can be identified as the diff is empty. The implementation details of the search functionality are missing.\\n\\n### Affected system components\\nWithout the code, it's impossible to determine which system components are affected. A user search feature would typically impact:\\n-   Backend services responsible for querying the user database.\\n-   API endpoints that expose the search functionality.\\n-   Frontend components that provide the user interface for searching.\\n\\n## Scope Discovery & Context Expansion\\nGiven the lack of code, a proper scope discovery is not possible. To understand the full context of this change, the following areas would need to be investigated:\\n-   **Integration**: How is the new search function in `src/search.ts` called from other parts of the codebase (e.g., API handlers, UI event listeners)?\\n-   **Dependencies**: Does this feature rely on new or existing data sources or external services (e.g., a search index like Elasticsearch, or a database)?\\n-   **Configuration**: Is there any new configuration required to enable or use this feature?\\n-   **Tests**: Are there corresponding unit or integration tests for the new search functionality? A search for test files related to `search.ts` would be the next step.\\n\\n**Recommendation:** The pull request should be updated with the actual code changes for a proper review.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR introduces user search functionality by adding a new `src/search.ts` file. However, the pull request appears to be empty or incomplete, as there are no code changes in the provided diff, and the new file could not be read.\\n\\n## Files Changed Analysis\\n- **`src/search.ts`**: A new file was added, presumably to contain the user search logic. The file summary indicates 3 additions, but the content is not available, and the overall diff is empty.\\n\\n## Architecture & Impact Assessment\\n### What this PR accomplishes\\nBased on the title, this PR aims to add a user search feature to the application.\\n\\n### Key technical changes introduced\\nNo technical changes can be identified as the diff is empty. The implementation details of the search functionality are missing.\\n\\n### Affected system components\\nWithout the code, it's impossible to determine which system components are affected. A user search feature would typically impact:\\n-   Backend services responsible for querying the user database.\\n-   API endpoints that expose the search functionality.\\n-   Frontend components that provide the user interface for searching.\\n\\n## Scope Discovery & Context Expansion\\nGiven the lack of code, a proper scope discovery is not possible. To understand the full context of this change, the following areas would need to be investigated:\\n-   **Integration**: How is the new search function in `src/search.ts` called from other parts of the codebase (e.g., API handlers, UI event listeners)?\\n-   **Dependencies**: Does this feature rely on new or existing data sources or external services (e.g., a search index like Elasticsearch, or a database)?\\n-   **Configuration**: Is there any new configuration required to enable or use this feature?\\n-   **Tests**: Are there corresponding unit or integration tests for the new search functionality? A search for test files related to `search.ts` would be the next step.\\n\\n**Recommendation:** The pull request should be updated with the actual code changes for a proper review.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR introduces user search functionality by adding a new `src/search.ts` file. However, the pull request appears to be empty or incomplete, as there are no code changes in the provided diff, and the new file could not be read.\\n\\n## Files Changed Analysis\\n- **`src/search.ts`**: A new file was added, presumably to contain the user search logic. The file summary indicates 3 additions, but the content is not available, and the overall diff is empty.\\n\\n## Architecture & Impact Assessment\\n### What this PR accomplishes\\nBased on the title, this PR aims to add a user search feature to the application.\\n\\n### Key technical changes introduced\\nNo technical changes can be identified as the diff is empty. The implementation details of the search functionality are missing.\\n\\n### Affected system components\\nWithout the code, it's impossible to determine which system components are affected. A user search feature would typically impact:\\n-   Backend services responsible for querying the user database.\\n-   API endpoints that expose the search functionality.\\n-   Frontend components that provide the user interface for searching.\\n\\n## Scope Discovery & Context Expansion\\nGiven the lack of code, a proper scope discovery is not possible. To understand the full context of this change, the following areas would need to be investigated:\\n-   **Integration**: How is the new search function in `src/search.ts` called from other parts of the codebase (e.g., API handlers, UI event listeners)?\\n-   **Dependencies**: Does this feature rely on new or existing data sources or external services (e.g., a search index like Elasticsearch, or a database)?\\n-   **Configuration**: Is there any new configuration required to enable or use this feature?\\n-   **Tests**: Are there corresponding unit or integration tests for the new search functionality? A search for test files related to `search.ts` would be the next step.\\n\\n**Recommendation:** The pull request should be updated with the actual code changes for a proper review.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR introduces user search functionality by adding a new `src/search.ts` file. However, the pull request appears to be empty or incomplete, as there are no code changes in the provided diff, and the new file could not be read.\\n\\n## Files Changed Analysis\\n- **`src/search.ts`**: A new file was added, presumably to contain the user search logic. The file summary indicates 3 additions, but the content is not available, and the overall diff is empty.\\n\\n## Architecture & Impact Assessment\\n### What this PR accomplishes\\nBased on the title, this PR aims to add a user search feature to the application.\\n\\n### Key technical changes introduced\\nNo technical changes can be identified as the diff is empty. The implementation details of the search functionality are missing.\\n\\n### Affected system components\\nWithout the code, it's impossible to determine which system components are affected. A user search feature would typically impact:\\n-   Backend services responsible for querying the user database.\\n-   API endpoints that expose the search functionality.\\n-   Frontend components that provide the user interface for searching.\\n\\n## Scope Discovery & Context Expansion\\nGiven the lack of code, a proper scope discovery is not possible. To understand the full context of this change, the following areas would need to be investigated:\\n-   **Integration**: How is the new search function in `src/search.ts` called from other parts of the codebase (e.g., API handlers, UI event listeners)?\\n-   **Dependencies**: Does this feature rely on new or existing data sources or external services (e.g., a search index like Elasticsearch, or a database)?\\n-   **Configuration**: Is there any new configuration required to enable or use this feature?\\n-   **Tests**: Are there corresponding unit or integration tests for the new search functionality? A search for test files related to `search.ts` would be the next step.\\n\\n**Recommendation:** The pull request should be updated with the actual code changes for a proper review.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR introduces user search functionality by adding a new `src/search.ts` file. However, the pull request appears to be empty or incomplete, as there are no code changes in the provided diff, and the new file could not be read.\\n\\n## Files Changed Analysis\\n- **`src/search.ts`**: A new file was added, presumably to contain the user search logic. The file summary indicates 3 additions, but the content is not available, and the overall diff is empty.\\n\\n## Architecture & Impact Assessment\\n### What this PR accomplishes\\nBased on the title, this PR aims to add a user search feature to the application.\\n\\n### Key technical changes introduced\\nNo technical changes can be identified as the diff is empty. The implementation details of the search functionality are missing.\\n\\n### Affected system components\\nWithout the code, it's impossible to determine which system components are affected. A user search feature would typically impact:\\n-   Backend services responsible for querying the user database.\\n-   API endpoints that expose the search functionality.\\n-   Frontend components that provide the user interface for searching.\\n\\n## Scope Discovery & Context Expansion\\nGiven the lack of code, a proper scope discovery is not possible. To understand the full context of this change, the following areas would need to be investigated:\\n-   **Integration**: How is the new search function in `src/search.ts` called from other parts of the codebase (e.g., API handlers, UI event listeners)?\\n-   **Dependencies**: Does this feature rely on new or existing data sources or external services (e.g., a search index like Elasticsearch, or a database)?\\n-   **Configuration**: Is there any new configuration required to enable or use this feature?\\n-   **Tests**: Are there corresponding unit or integration tests for the new search functionality? A search for test files related to `search.ts` would be the next step.\\n\\n**Recommendation:** The pull request should be updated with the actual code changes for a proper review.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"apply-overview-labels","visor.provider.type":"github"}}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
