{"name":"visor.run","attributes":{"started":true}}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"High‑level summary of the changes and impact.\\n\",\"tags\":{\"label\":\"feature\",\"review-effort\":2}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"High‑level summary of the changes and impact.\\n\",\"tags\":{\"label\":\"feature\",\"review-effort\":2}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"High‑level summary of the changes and impact.\\n\",\"tags\":{\"label\":\"feature\",\"review-effort\":2}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"High‑level summary of the changes and impact.\\n\",\"tags\":{\"label\":\"feature\",\"review-effort\":2}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"apply-overview-labels","visor.provider.type":"github"}}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[{\"file\":\"src/search.ts\",\"line\":1,\"ruleId\":\"review/missing-code\",\"message\":\"The content of this file, which is marked as added in the pull request, could not be found. The provided diff is empty, and attempts to read the file failed. An architectural review cannot be performed without the source code.\",\"severity\":\"critical\",\"category\":\"architecture\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"check","name":"architecture_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"check","name":"architecture_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"check","name":"architecture_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"check","name":"architecture_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"check","name":"architecture_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.output":"{\"text\":\"This PR introduces a new file for user search functionality. It appears to be a placeholder for future development as the file is currently empty.\\n\\n## Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file has been added to the `src` directory. While the summary indicates 3 lines were added, the diff is empty, suggesting the file is either empty or contains only whitespace/newlines.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: This PR scaffolds the initial structure for a user search feature by adding the `src/search.ts` file. It does not introduce any functional changes at this stage.\\n- **Key technical changes introduced**: A new, likely empty, file is added to the codebase. No logic or architectural changes are present.\\n- **Affected system components**: No system components are functionally affected by this change. It prepares for future work on a search component.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The creation of `src/search.ts` implies that a new search module is being developed.\\n- To understand the full context, I would typically search for:\\n    - How `src/search.ts` is imported and used in other parts of the application (e.g., in UI components or API endpoints).\\n    - Corresponding test files (e.g., `src/search.test.ts`) to see the intended functionality and usage patterns.\\n- Given the file is empty, it's unlikely to be integrated elsewhere yet. This change appears to be the very first step in building out the feature.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR introduces a new file for user search functionality. It appears to be a placeholder for future development as the file is currently empty.\\n\\n## Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file has been added to the `src` directory. While the summary indicates 3 lines were added, the diff is empty, suggesting the file is either empty or contains only whitespace/newlines.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: This PR scaffolds the initial structure for a user search feature by adding the `src/search.ts` file. It does not introduce any functional changes at this stage.\\n- **Key technical changes introduced**: A new, likely empty, file is added to the codebase. No logic or architectural changes are present.\\n- **Affected system components**: No system components are functionally affected by this change. It prepares for future work on a search component.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The creation of `src/search.ts` implies that a new search module is being developed.\\n- To understand the full context, I would typically search for:\\n    - How `src/search.ts` is imported and used in other parts of the application (e.g., in UI components or API endpoints).\\n    - Corresponding test files (e.g., `src/search.test.ts`) to see the intended functionality and usage patterns.\\n- Given the file is empty, it's unlikely to be integrated elsewhere yet. This change appears to be the very first step in building out the feature.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR introduces a new file for user search functionality. It appears to be a placeholder for future development as the file is currently empty.\\n\\n## Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file has been added to the `src` directory. While the summary indicates 3 lines were added, the diff is empty, suggesting the file is either empty or contains only whitespace/newlines.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: This PR scaffolds the initial structure for a user search feature by adding the `src/search.ts` file. It does not introduce any functional changes at this stage.\\n- **Key technical changes introduced**: A new, likely empty, file is added to the codebase. No logic or architectural changes are present.\\n- **Affected system components**: No system components are functionally affected by this change. It prepares for future work on a search component.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The creation of `src/search.ts` implies that a new search module is being developed.\\n- To understand the full context, I would typically search for:\\n    - How `src/search.ts` is imported and used in other parts of the application (e.g., in UI components or API endpoints).\\n    - Corresponding test files (e.g., `src/search.test.ts`) to see the intended functionality and usage patterns.\\n- Given the file is empty, it's unlikely to be integrated elsewhere yet. This change appears to be the very first step in building out the feature.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR introduces a new file for user search functionality. It appears to be a placeholder for future development as the file is currently empty.\\n\\n## Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file has been added to the `src` directory. While the summary indicates 3 lines were added, the diff is empty, suggesting the file is either empty or contains only whitespace/newlines.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: This PR scaffolds the initial structure for a user search feature by adding the `src/search.ts` file. It does not introduce any functional changes at this stage.\\n- **Key technical changes introduced**: A new, likely empty, file is added to the codebase. No logic or architectural changes are present.\\n- **Affected system components**: No system components are functionally affected by this change. It prepares for future work on a search component.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The creation of `src/search.ts` implies that a new search module is being developed.\\n- To understand the full context, I would typically search for:\\n    - How `src/search.ts` is imported and used in other parts of the application (e.g., in UI components or API endpoints).\\n    - Corresponding test files (e.g., `src/search.test.ts`) to see the intended functionality and usage patterns.\\n- Given the file is empty, it's unlikely to be integrated elsewhere yet. This change appears to be the very first step in building out the feature.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR introduces a new file for user search functionality. It appears to be a placeholder for future development as the file is currently empty.\\n\\n## Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file has been added to the `src` directory. While the summary indicates 3 lines were added, the diff is empty, suggesting the file is either empty or contains only whitespace/newlines.\\n\\n## Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: This PR scaffolds the initial structure for a user search feature by adding the `src/search.ts` file. It does not introduce any functional changes at this stage.\\n- **Key technical changes introduced**: A new, likely empty, file is added to the codebase. No logic or architectural changes are present.\\n- **Affected system components**: No system components are functionally affected by this change. It prepares for future work on a search component.\\n\\n## Scope Discovery & Context Expansion\\n\\n- The creation of `src/search.ts` implies that a new search module is being developed.\\n- To understand the full context, I would typically search for:\\n    - How `src/search.ts` is imported and used in other parts of the application (e.g., in UI components or API endpoints).\\n    - Corresponding test files (e.g., `src/search.test.ts`) to see the intended functionality and usage patterns.\\n- Given the file is empty, it's unlikely to be integrated elsewhere yet. This change appears to be the very first step in building out the feature.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"Overview text\",\"tags\":{\"label\":\"bug\",\"review-effort\":3}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"Overview text\",\"tags\":{\"label\":\"bug\",\"review-effort\":3}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"Overview text\",\"tags\":{\"label\":\"bug\",\"review-effort\":3}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"Overview text\",\"tags\":{\"label\":\"bug\",\"review-effort\":3}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"security","scope":"check","name":"security_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"check","name":"security_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"security","scope":"check","name":"security_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"check","name":"security_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"security","scope":"check","name":"security_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"apply-overview-labels","visor.provider.type":"github"}}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"apply-overview-labels","visor.provider.type":"github"}}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search (update)\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":1,\"deletions\":0,\"changes\":1,\"status\":\"modified\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return [q] // updated\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"Short overview\",\"tags\":{\"label\":\"chore\",\"review-effort\":1}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"Short overview\",\"tags\":{\"label\":\"chore\",\"review-effort\":1}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"Short overview\",\"tags\":{\"label\":\"chore\",\"review-effort\":1}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"Short overview\",\"tags\":{\"label\":\"chore\",\"review-effort\":1}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"apply-overview-labels","visor.provider.type":"github"}}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.output":"{\"text\":\"### PR Overview\\n\\nThis PR is titled \\\"feat: add user search (update)\\\" and indicates a modification to `src/search.ts`. However, the provided diff is empty, and the file content could not be retrieved. Without the code changes, a proper review is not possible.\\n\\n### Analysis\\n\\n- **Files Changed**: `src/search.ts` is listed as modified with one addition.\\n- **Problem**: The code diff is missing, which contradicts the file summary. An attempt to read the file directly was unsuccessful.\\n\\n### Recommendation\\n\\nPlease verify that the commit has been pushed correctly and that the pull request contains the intended changes. The review cannot proceed until the code is available.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search (update)\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":1,\"deletions\":0,\"changes\":1,\"status\":\"modified\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return [q] // updated\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"### PR Overview\\n\\nThis PR is titled \\\"feat: add user search (update)\\\" and indicates a modification to `src/search.ts`. However, the provided diff is empty, and the file content could not be retrieved. Without the code changes, a proper review is not possible.\\n\\n### Analysis\\n\\n- **Files Changed**: `src/search.ts` is listed as modified with one addition.\\n- **Problem**: The code diff is missing, which contradicts the file summary. An attempt to read the file directly was unsuccessful.\\n\\n### Recommendation\\n\\nPlease verify that the commit has been pushed correctly and that the pull request contains the intended changes. The review cannot proceed until the code is available.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search (update)\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":1,\"deletions\":0,\"changes\":1,\"status\":\"modified\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return [q] // updated\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"### PR Overview\\n\\nThis PR is titled \\\"feat: add user search (update)\\\" and indicates a modification to `src/search.ts`. However, the provided diff is empty, and the file content could not be retrieved. Without the code changes, a proper review is not possible.\\n\\n### Analysis\\n\\n- **Files Changed**: `src/search.ts` is listed as modified with one addition.\\n- **Problem**: The code diff is missing, which contradicts the file summary. An attempt to read the file directly was unsuccessful.\\n\\n### Recommendation\\n\\nPlease verify that the commit has been pushed correctly and that the pull request contains the intended changes. The review cannot proceed until the code is available.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search (update)\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":1,\"deletions\":0,\"changes\":1,\"status\":\"modified\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return [q] // updated\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"### PR Overview\\n\\nThis PR is titled \\\"feat: add user search (update)\\\" and indicates a modification to `src/search.ts`. However, the provided diff is empty, and the file content could not be retrieved. Without the code changes, a proper review is not possible.\\n\\n### Analysis\\n\\n- **Files Changed**: `src/search.ts` is listed as modified with one addition.\\n- **Problem**: The code diff is missing, which contradicts the file summary. An attempt to read the file directly was unsuccessful.\\n\\n### Recommendation\\n\\nPlease verify that the commit has been pushed correctly and that the pull request contains the intended changes. The review cannot proceed until the code is available.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search (update)\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":1,\"deletions\":0,\"changes\":1,\"status\":\"modified\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return [q] // updated\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"### PR Overview\\n\\nThis PR is titled \\\"feat: add user search (update)\\\" and indicates a modification to `src/search.ts`. However, the provided diff is empty, and the file content could not be retrieved. Without the code changes, a proper review is not possible.\\n\\n### Analysis\\n\\n- **Files Changed**: `src/search.ts` is listed as modified with one addition.\\n- **Problem**: The code diff is missing, which contradicts the file summary. An attempt to read the file directly was unsuccessful.\\n\\n### Recommendation\\n\\nPlease verify that the commit has been pushed correctly and that the pull request contains the intended changes. The review cannot proceed until the code is available.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[{\"file\":\"src/search.ts\",\"line\":1,\"ruleId\":\"review/missing-code\",\"message\":\"Unable to perform the code review for 'src/search.ts'. The file is marked as added in the pull request summary, but the provided diff is empty and the file content could not be retrieved. Without the code, a quality assessment is not possible.\",\"severity\":\"error\",\"category\":\"architecture\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"check","name":"quality_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"check","name":"quality_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"check","name":"quality_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"check","name":"quality_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"check","name":"quality_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"quality","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[{\"file\":\"src/search.ts\",\"line\":1,\"ruleId\":\"performance/missing-code\",\"message\":\"The code for this file, which is listed in the pull request summary, was not found in the provided diff. An attempt to read the file directly also failed. A performance review cannot be conducted without the source code.\",\"severity\":\"error\",\"category\":\"logic\",\"suggestion\":\"Please ensure the pull request diff is correctly generated and includes all changed files. If the file was intended to be added, verify that it exists in the branch and is properly committed.\"}]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"check","name":"performance_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"check","name":"performance_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"check","name":"performance_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"check","name":"performance_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"check","name":"performance_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.provider","attributes":{"visor.check.id":"overview","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview","visor.check.output":"{\"text\":\"This PR aims to add a user search feature. A new file, `src/search.ts`, is listed as being added with 3 lines of code.\\n\\nHowever, the content of this new file could not be accessed, and it does not appear in the source directory listing. The provided diff is also empty. This discrepancy prevents a meaningful review of the implementation.\\n\\n### Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file is reported as added. According to the summary, it contains 3 lines of new code. However, the file is not accessible for review.\\n\\n### Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: Based on the title, this PR intends to introduce a user search capability.\\n- **Key technical changes introduced**: A new file, `src/search.ts`, is created. Without its content, no specific technical changes can be described.\\n- **Affected system components**: The changes would likely affect search-related components and potentially APIs or UI elements that would consume this new functionality.\\n\\n### Scope Discovery & Context Expansion\\n\\n- Due to the missing file content, it's impossible to determine the scope of impact.\\n- To understand the changes, the following steps would be necessary once the file is available:\\n    1.  **Examine `src/search.ts`**: Understand the search logic, its dependencies, and how it's exposed.\\n    2.  **Find usages**: Search the codebase to see how `src/search.ts` is imported and used by other components (e.g., API endpoints, services, UI).\\n    3.  **Check for tests**: Look for corresponding test files (e.g., `src/search.test.ts`) to understand the expected behavior and edge cases.\\n    4.  **Review configuration**: Check for any new or modified configuration related to the search feature.\\n\\n**Conclusion**: A full review cannot be completed because the primary file containing the changes is missing or inaccessible.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"overview"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"security","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR aims to add a user search feature. A new file, `src/search.ts`, is listed as being added with 3 lines of code.\\n\\nHowever, the content of this new file could not be accessed, and it does not appear in the source directory listing. The provided diff is also empty. This discrepancy prevents a meaningful review of the implementation.\\n\\n### Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file is reported as added. According to the summary, it contains 3 lines of new code. However, the file is not accessible for review.\\n\\n### Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: Based on the title, this PR intends to introduce a user search capability.\\n- **Key technical changes introduced**: A new file, `src/search.ts`, is created. Without its content, no specific technical changes can be described.\\n- **Affected system components**: The changes would likely affect search-related components and potentially APIs or UI elements that would consume this new functionality.\\n\\n### Scope Discovery & Context Expansion\\n\\n- Due to the missing file content, it's impossible to determine the scope of impact.\\n- To understand the changes, the following steps would be necessary once the file is available:\\n    1.  **Examine `src/search.ts`**: Understand the search logic, its dependencies, and how it's exposed.\\n    2.  **Find usages**: Search the codebase to see how `src/search.ts` is imported and used by other components (e.g., API endpoints, services, UI).\\n    3.  **Check for tests**: Look for corresponding test files (e.g., `src/search.test.ts`) to understand the expected behavior and edge cases.\\n    4.  **Review configuration**: Check for any new or modified configuration related to the search feature.\\n\\n**Conclusion**: A full review cannot be completed because the primary file containing the changes is missing or inaccessible.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"architecture","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR aims to add a user search feature. A new file, `src/search.ts`, is listed as being added with 3 lines of code.\\n\\nHowever, the content of this new file could not be accessed, and it does not appear in the source directory listing. The provided diff is also empty. This discrepancy prevents a meaningful review of the implementation.\\n\\n### Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file is reported as added. According to the summary, it contains 3 lines of new code. However, the file is not accessible for review.\\n\\n### Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: Based on the title, this PR intends to introduce a user search capability.\\n- **Key technical changes introduced**: A new file, `src/search.ts`, is created. Without its content, no specific technical changes can be described.\\n- **Affected system components**: The changes would likely affect search-related components and potentially APIs or UI elements that would consume this new functionality.\\n\\n### Scope Discovery & Context Expansion\\n\\n- Due to the missing file content, it's impossible to determine the scope of impact.\\n- To understand the changes, the following steps would be necessary once the file is available:\\n    1.  **Examine `src/search.ts`**: Understand the search logic, its dependencies, and how it's exposed.\\n    2.  **Find usages**: Search the codebase to see how `src/search.ts` is imported and used by other components (e.g., API endpoints, services, UI).\\n    3.  **Check for tests**: Look for corresponding test files (e.g., `src/search.test.ts`) to understand the expected behavior and edge cases.\\n    4.  **Review configuration**: Check for any new or modified configuration related to the search feature.\\n\\n**Conclusion**: A full review cannot be completed because the primary file containing the changes is missing or inaccessible.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"performance","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR aims to add a user search feature. A new file, `src/search.ts`, is listed as being added with 3 lines of code.\\n\\nHowever, the content of this new file could not be accessed, and it does not appear in the source directory listing. The provided diff is also empty. This discrepancy prevents a meaningful review of the implementation.\\n\\n### Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file is reported as added. According to the summary, it contains 3 lines of new code. However, the file is not accessible for review.\\n\\n### Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: Based on the title, this PR intends to introduce a user search capability.\\n- **Key technical changes introduced**: A new file, `src/search.ts`, is created. Without its content, no specific technical changes can be described.\\n- **Affected system components**: The changes would likely affect search-related components and potentially APIs or UI elements that would consume this new functionality.\\n\\n### Scope Discovery & Context Expansion\\n\\n- Due to the missing file content, it's impossible to determine the scope of impact.\\n- To understand the changes, the following steps would be necessary once the file is available:\\n    1.  **Examine `src/search.ts`**: Understand the search logic, its dependencies, and how it's exposed.\\n    2.  **Find usages**: Search the codebase to see how `src/search.ts` is imported and used by other components (e.g., API endpoints, services, UI).\\n    3.  **Check for tests**: Look for corresponding test files (e.g., `src/search.test.ts`) to understand the expected behavior and edge cases.\\n    4.  **Review configuration**: Check for any new or modified configuration related to the search feature.\\n\\n**Conclusion**: A full review cannot be completed because the primary file containing the changes is missing or inaccessible.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.provider","attributes":{"visor.check.id":"quality","visor.provider.type":"ai"}}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.input.context":"{\"pr\":{\"number\":1,\"title\":\"feat: add user search\",\"author\":\"test-user\",\"branch\":\"feature/test\",\"base\":\"main\"},\"files\":[{\"filename\":\"src/search.ts\",\"additions\":3,\"deletions\":0,\"changes\":3,\"status\":\"added\",\"patch\":\"@@\\n+export function search(q: string) {\\n  return []\\n}\\n\"}],\"outputs\":{\"overview\":{\"text\":\"This PR aims to add a user search feature. A new file, `src/search.ts`, is listed as being added with 3 lines of code.\\n\\nHowever, the content of this new file could not be accessed, and it does not appear in the source directory listing. The provided diff is also empty. This discrepancy prevents a meaningful review of the implementation.\\n\\n### Files Changed Analysis\\n\\n- **`src/search.ts`**: A new file is reported as added. According to the summary, it contains 3 lines of new code. However, the file is not accessible for review.\\n\\n### Architecture & Impact Assessment\\n\\n- **What this PR accomplishes**: Based on the title, this PR intends to introduce a user search capability.\\n- **Key technical changes introduced**: A new file, `src/search.ts`, is created. Without its content, no specific technical changes can be described.\\n- **Affected system components**: The changes would likely affect search-related components and potentially APIs or UI elements that would consume this new functionality.\\n\\n### Scope Discovery & Context Expansion\\n\\n- Due to the missing file content, it's impossible to determine the scope of impact.\\n- To understand the changes, the following steps would be necessary once the file is available:\\n    1.  **Examine `src/search.ts`**: Understand the search logic, its dependencies, and how it's exposed.\\n    2.  **Find usages**: Search the codebase to see how `src/search.ts` is imported and used by other components (e.g., API endpoints, services, UI).\\n    3.  **Check for tests**: Look for corresponding test files (e.g., `src/search.test.ts`) to understand the expected behavior and edge cases.\\n    4.  **Review configuration**: Check for any new or modified configuration related to the search feature.\\n\\n**Conclusion**: A full review cannot be completed because the primary file containing the changes is missing or inaccessible.\",\"tags\":{\"review-effort\":1,\"label\":\"feature\"}}}}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"security","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"security","scope":"global"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"overview","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"overview","scope":"global"}}]}
{"name":"visor.provider","attributes":{"visor.check.id":"apply-overview-labels","visor.provider.type":"github"}}
{"name":"visor.check","attributes":{"visor.check.id":"apply-overview-labels"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"check","name":"apply-overview-labels_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if"},"events":[{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')","severity":"error"}}]}
{"name":"visor.fail_if","attributes":{"check":"apply-overview-labels","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"apply-overview-labels","scope":"global"}},{"name":"fail_if.triggered","attrs":{"check":"apply-overview-labels","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"architecture","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"architecture","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"quality","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"quality"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"quality","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"quality","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance","visor.check.output":"{\"issues\":[]}"},"events":[]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.event","attributes":{},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global","name":"global_fail_if","expression":"output.issues && output.issues.some(i => i.severity === 'critical' || i.severity === 'error')"}}]}
{"name":"visor.fail_if","attributes":{"check":"performance","scope":"global"},"events":[{"name":"fail_if.evaluated","attrs":{"check":"performance","scope":"global"}}]}
{"name":"visor.check","attributes":{"visor.check.id":"security"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"architecture"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
{"name":"visor.check","attributes":{"visor.check.id":"performance"},"events":[{"name":"check.started"},{"name":"check.completed"}]}
