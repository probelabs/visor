version: "1.0"

checks:
  security:
    type: ai
    group: code-review
    schema: code-review
    prompt: |
      Perform comprehensive security analysis focusing on:
      - SQL injection vulnerabilities
      - XSS attack vectors  
      - Authentication/authorization issues
      - Sensitive data exposure
      - Input validation and sanitization
      - Unsafe eval() usage
      - Environment variable security
      
      Return results in JSON format matching the code-review schema.
    on: [pr_opened, pr_updated]

  performance:
    type: ai
    group: code-review
    schema: code-review
    prompt: |
      Review for performance issues:
      - N+1 database queries
      - Memory leaks and excessive allocations
      - Inefficient algorithms and data structures
      - Missing caching opportunities
      - Unnecessary async operations
      - Large file processing without streaming
      - Blocking operations in event loops
      
      Return results in JSON format matching the code-review schema.
    on: [pr_opened, pr_updated]

  style:
    type: ai
    group: code-review
    schema: code-review
    prompt: |
      Check for style and consistency issues:
      - Naming conventions adherence
      - Code formatting consistency
      - Comment quality and documentation
      - Import organization
      - Consistent error handling patterns
      - TypeScript best practices
      
      Return results in JSON format matching the code-review schema.
    on: [pr_opened]

  architecture:
    type: ai
    group: code-review
    schema: code-review
    prompt: |
      Analyze architectural aspects:
      - SOLID principles adherence
      - Design pattern usage appropriateness
      - Circular dependencies
      - Module coupling and cohesion
      - Error handling architecture
      - Separation of concerns
      - Code reusability and maintainability
      
      Return results in JSON format matching the code-review schema.
    on: [pr_opened, pr_updated]

  # PR overview with file changes and mermaid diagram
  full-review:
    type: ai
    group: pr-overview
    schema: text
    prompt: |
      Create a comprehensive pull request overview with the following sections:

      ## 📋 Pull Request Overview
      
      1. **Summary**: Brief description of what this PR does based on the changes
      2. **Files Changed**: Create a table showing modified files with their purpose
      3. **Architecture Impact**: How these changes affect the system architecture
      
      ## 📊 Files Changed
      
      Create a markdown table with columns:
      | File | Lines Changed | Purpose/Component |
      |------|---------------|------------------|
      | path/to/file | +10/-5 | Brief description of what this file does |
      
      ## 🏗️ Architecture Diagram
      
      Generate a mermaid diagram showing the relationships between the modified components:
      
      ```mermaid
      graph TD
        A[Component A] --> B[Component B]
        B --> C[Database]
        C --> D[API Endpoints]
      ```
      
      Focus on:
      - Components that were modified
      - How they interact with each other
      - Data flow between components
      - Any new relationships introduced
      
      Keep the diagram clean and focused on the architectural changes.
    on: [pr_opened, pr_updated]

